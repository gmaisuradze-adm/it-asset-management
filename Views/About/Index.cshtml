@model HospitalAssetTracker.Models.AboutViewModel
@{
    ViewData["Title"] = "About - System Information";
    ViewData["ActivePage"] = "About";
}

@section Styles {
    <link rel="stylesheet" href="~/css/about.css" />
}

<div class="about-container">
    <!-- Header Section -->
    <div class="about-header bg-gradient-primary text-white py-4 mb-4">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="mb-2">
                        <i class="fas fa-info-circle"></i>
                        @Model.ApplicationInfo.Name
                    </h1>
                    <p class="mb-0 lead">@Model.ApplicationInfo.Description</p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="version-badge">
                        <span class="badge badge-light badge-lg">
                            Version @Model.VersionInfo.Version
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Quick Stats Row -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="stat-card bg-primary text-white">
                    <div class="stat-icon">
                        <i class="fas fa-heartbeat"></i>
                    </div>
                    <div class="stat-content">
                        <h3>@Model.SystemHealth.Status</h3>
                        <p>System Status</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card bg-success text-white">
                    <div class="stat-icon">
                        <i class="fas fa-clock"></i>
                    </div>
                    <div class="stat-content">
                        <h3>@((int)Model.SystemHealth.Uptime.TotalDays)d</h3>
                        <p>Uptime</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card bg-warning text-white">
                    <div class="stat-icon">
                        <i class="fas fa-bug"></i>
                    </div>
                    <div class="stat-content">
                        <h3>@Model.BugReports.Count(b => b.Status == "Open")</h3>
                        <p>Open Issues</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card bg-info text-white">
                    <div class="stat-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <div class="stat-content">
                        <h3>@Model.SystemHealth.ActiveConnections</h3>
                        <p>Active Users</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Tabs -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow">
                    <div class="card-header">
                        <ul class="nav nav-tabs card-header-tabs" id="aboutTabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="overview-tab" data-bs-toggle="tab" href="#overview" role="tab">
                                    <i class="fas fa-desktop"></i> Overview
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="version-tab" data-bs-toggle="tab" href="#version" role="tab">
                                    <i class="fas fa-code-branch"></i> Version Management
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="bugs-tab" data-bs-toggle="tab" href="#bugs" role="tab">
                                    <i class="fas fa-bug"></i> Bug Reports
                                    @if (Model.BugReports.Any(b => b.Status == "Open"))
                                    {
                                        <span class="badge badge-danger ms-1">@Model.BugReports.Count(b => b.Status == "Open")</span>
                                    }
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="system-tab" data-bs-toggle="tab" href="#system" role="tab">
                                    <i class="fas fa-server"></i> System Health
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="changelog-tab" data-bs-toggle="tab" href="#changelog" role="tab">
                                    <i class="fas fa-history"></i> Change Log
                                </a>
                            </li>
                            @if (Model.DevelopmentInfo != null)
                            {
                                <li class="nav-item">
                                    <a class="nav-link" id="dev-tab" data-bs-toggle="tab" href="#dev" role="tab">
                                        <i class="fas fa-code"></i> Development
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="aboutTabsContent">
                            <!-- Overview Tab -->
                            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h5><i class="fas fa-info-circle text-primary"></i> Application Information</h5>
                                        <table class="table table-borderless">
                                            <tr>
                                                <td><strong>Name:</strong></td>
                                                <td>@Model.ApplicationInfo.Name</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Company:</strong></td>
                                                <td>@Model.ApplicationInfo.Company</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Environment:</strong></td>
                                                <td>
                                                    <span class="badge badge-@(Model.ApplicationInfo.Environment == "Production" ? "success" : "warning")">
                                                        @Model.ApplicationInfo.Environment
                                                    </span>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td><strong>Platform:</strong></td>
                                                <td>@Model.ApplicationInfo.Platform (@Model.ApplicationInfo.Architecture)</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Framework:</strong></td>
                                                <td>.NET @Model.ApplicationInfo.Framework</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Server Time:</strong></td>
                                                <td>@Model.ApplicationInfo.ServerTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                            </tr>
                                        </table>
                                    </div>
                                    <div class="col-md-6">
                                        <h5><i class="fas fa-chart-line text-success"></i> System Status</h5>
                                        <div class="system-metrics">
                                            <div class="metric-item">
                                                <div class="metric-label">Memory Usage</div>
                                                <div class="metric-value">@Model.SystemHealth.MemoryUsage</div>
                                            </div>
                                            <div class="metric-item">
                                                <div class="metric-label">Disk Space</div>
                                                <div class="metric-value">@Model.SystemHealth.DiskSpace</div>
                                            </div>
                                            <div class="metric-item">
                                                <div class="metric-label">Last Backup</div>
                                                <div class="metric-value">@Model.SystemHealth.LastBackup.ToString("MMM dd, HH:mm")</div>
                                            </div>
                                            <div class="metric-item">
                                                <div class="metric-label">Next Maintenance</div>
                                                <div class="metric-value">@Model.SystemHealth.NextMaintenance.ToString("MMM dd, yyyy")</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Version Management Tab -->
                            <div class="tab-pane fade" id="version" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-8">
                                        <h5><i class="fas fa-code-branch text-primary"></i> Current Version</h5>
                                        <div class="version-info">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <table class="table table-borderless">
                                                        <tr>
                                                            <td><strong>Version:</strong></td>
                                                            <td><span class="badge badge-primary badge-lg">@Model.VersionInfo.Version</span></td>
                                                        </tr>
                                                        <tr>
                                                            <td><strong>Build Date:</strong></td>
                                                            <td>@Model.VersionInfo.BuildDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                                        </tr>
                                                        <tr>
                                                            <td><strong>Build Machine:</strong></td>
                                                            <td>@Model.VersionInfo.BuildMachine</td>
                                                        </tr>
                                                        <tr>
                                                            <td><strong>Build User:</strong></td>
                                                            <td>@Model.VersionInfo.BuildUser</td>
                                                        </tr>
                                                        <tr>
                                                            <td><strong>Git Commit:</strong></td>
                                                            <td><code>@Model.VersionInfo.GitCommit</code></td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <h5><i class="fas fa-tools text-warning"></i> Version Control</h5>
                                            <div class="version-controls">
                                                <div class="mb-3">
                                                    <label class="form-label">Version Type:</label>
                                                    <select class="form-select" id="versionType">
                                                        <option value="build">Build (1.0.0.X)</option>
                                                        <option value="patch">Patch (1.0.X.0)</option>
                                                        <option value="minor">Minor (1.X.0.0)</option>
                                                        <option value="major">Major (X.0.0.0)</option>
                                                    </select>
                                                </div>
                                                <div class="mb-3">
                                                    <label class="form-label">Release Notes:</label>
                                                    <textarea class="form-control" id="releaseNotes" rows="3" placeholder="Describe changes..."></textarea>
                                                </div>
                                                <button class="btn btn-warning btn-block" onclick="updateVersion()">
                                                    <i class="fas fa-arrow-up"></i> Update Version
                                                </button>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="alert alert-info">
                                                <i class="fas fa-lock"></i>
                                                Admin access required for version management.
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>

                            <!-- Bug Reports Tab -->
                            <div class="tab-pane fade" id="bugs" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-8">
                                        <h5><i class="fas fa-bug text-danger"></i> Recent Bug Reports</h5>
                                        <div class="bug-list">
                                            @if (Model.BugReports.Any())
                                            {
                                                @foreach (var bug in Model.BugReports.OrderByDescending(b => b.ReportedDate).Take(10))
                                                {
                                                    <div class="bug-item">
                                                        <div class="bug-header">
                                                            <span class="badge badge-@GetSeverityColor(bug.Severity)">@bug.Severity</span>
                                                            <span class="badge badge-@GetStatusColor(bug.Status)">@bug.Status</span>
                                                            <small class="text-muted">@bug.ReportedDate.ToString("MMM dd, HH:mm")</small>
                                                        </div>
                                                        <h6>@bug.Title</h6>
                                                        <p class="text-muted">@(bug.Description.Length > 100 ? bug.Description.Substring(0, 100) + "..." : bug.Description)</p>
                                                        <small>Reported by: @bug.ReportedBy | Category: @bug.Category</small>
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <div class="text-center py-4">
                                                    <i class="fas fa-check-circle text-success fa-3x mb-3"></i>
                                                    <h5>No Bug Reports</h5>
                                                    <p class="text-muted">Great! No bugs have been reported recently.</p>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <h5><i class="fas fa-plus text-primary"></i> Report New Bug</h5>
                                        <div class="bug-report-form">
                                            <div class="mb-3">
                                                <label class="form-label">Title:</label>
                                                <input type="text" class="form-control" id="bugTitle" placeholder="Brief description">
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Category:</label>
                                                <select class="form-select" id="bugCategory">
                                                    <option value="UI">User Interface</option>
                                                    <option value="Backend">Backend/Logic</option>
                                                    <option value="Database">Database</option>
                                                    <option value="Performance">Performance</option>
                                                    <option value="Security">Security</option>
                                                </select>
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Severity:</label>
                                                <select class="form-select" id="bugSeverity">
                                                    <option value="Low">Low</option>
                                                    <option value="Medium" selected>Medium</option>
                                                    <option value="High">High</option>
                                                    <option value="Critical">Critical</option>
                                                </select>
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Description:</label>
                                                <textarea class="form-control" id="bugDescription" rows="4" placeholder="Detailed description of the issue"></textarea>
                                            </div>
                                            <button class="btn btn-danger btn-block" onclick="reportBug()">
                                                <i class="fas fa-bug"></i> Report Bug
                                            </button>
                                        </div>

                                        @if (User.IsInRole("Admin"))
                                        {
                                            <hr>
                                            <div class="auto-fix-section">
                                                <h6><i class="fas fa-magic text-success"></i> Auto-Fix Tools</h6>
                                                <button class="btn btn-success btn-sm btn-block" onclick="autoFixBugs()">
                                                    <i class="fas fa-wrench"></i> Run Auto-Fix
                                                </button>
                                                <small class="text-muted">Automatically resolve common issues</small>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>

                            <!-- System Health Tab -->
                            <div class="tab-pane fade" id="system" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h5><i class="fas fa-heartbeat text-success"></i> System Health</h5>
                                        <div class="health-metrics">
                                            <div class="metric-card">
                                                <div class="metric-icon bg-success">
                                                    <i class="fas fa-server"></i>
                                                </div>
                                                <div class="metric-details">
                                                    <h4>@Model.SystemHealth.Status</h4>
                                                    <p>Overall System Status</p>
                                                </div>
                                            </div>
                                            <div class="metric-card">
                                                <div class="metric-icon bg-primary">
                                                    <i class="fas fa-memory"></i>
                                                </div>
                                                <div class="metric-details">
                                                    <h4>@Model.SystemHealth.MemoryUsage</h4>
                                                    <p>Memory Usage</p>
                                                </div>
                                            </div>
                                            <div class="metric-card">
                                                <div class="metric-icon bg-info">
                                                    <i class="fas fa-hdd"></i>
                                                </div>
                                                <div class="metric-details">
                                                    <h4>@Model.SystemHealth.DiskSpace</h4>
                                                    <p>Available Disk Space</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <h5><i class="fas fa-chart-line text-primary"></i> Real-time Status</h5>
                                        <div id="systemStatus" class="system-status">
                                            <div class="status-loading">
                                                <i class="fas fa-spinner fa-spin"></i> Loading system status...
                                            </div>
                                        </div>
                                        <button class="btn btn-primary btn-sm" onclick="refreshSystemStatus()">
                                            <i class="fas fa-sync-alt"></i> Refresh Status
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Change Log Tab -->
                            <div class="tab-pane fade" id="changelog" role="tabpanel">
                                <h5><i class="fas fa-history text-info"></i> Recent Changes</h5>
                                <div class="changelog-list">
                                    @foreach (var entry in Model.ChangeLog.OrderByDescending(c => c.Date))
                                    {
                                        <div class="changelog-item">
                                            <div class="changelog-header">
                                                <span class="badge badge-@GetChangeTypeColor(entry.Type)">@entry.Type</span>
                                                <span class="version">@entry.Version</span>
                                                <span class="date">@entry.Date.ToString("MMM dd, yyyy")</span>
                                            </div>
                                            <div class="changelog-content">
                                                <p>@entry.Description</p>
                                                <small class="text-muted">by @entry.Author</small>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                            @if (Model.DevelopmentInfo != null)
                            {
                                <!-- Development Tab -->
                                <div class="tab-pane fade" id="dev" role="tabpanel">
                                    <div class="alert alert-warning">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        <strong>Development Mode</strong> - This information is only visible in development environment.
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h5><i class="fas fa-code text-warning"></i> Development Info</h5>
                                            <table class="table table-borderless">
                                                <tr>
                                                    <td><strong>Last Compiled:</strong></td>
                                                    <td>@Model.DevelopmentInfo.LastCompiled.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Database:</strong></td>
                                                    <td>@Model.DevelopmentInfo.DatabaseProvider</td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Cache Provider:</strong></td>
                                                    <td>@Model.DevelopmentInfo.CacheProvider</td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Log Level:</strong></td>
                                                    <td>@Model.DevelopmentInfo.LogLevel</td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Hot Reload:</strong></td>
                                                    <td>
                                                        <span class="badge badge-@(Model.DevelopmentInfo.HotReload ? "success" : "secondary")">
                                                            @(Model.DevelopmentInfo.HotReload ? "Enabled" : "Disabled")
                                                        </span>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Debug Mode:</strong></td>
                                                    <td>
                                                        <span class="badge badge-@(Model.DevelopmentInfo.DebugMode ? "warning" : "success")">
                                                            @(Model.DevelopmentInfo.DebugMode ? "Enabled" : "Disabled")
                                                        </span>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                        <div class="col-md-6">
                                            <h5><i class="fas fa-tools text-secondary"></i> Debug Tools</h5>
                                            <div class="debug-tools">
                                                <button class="btn btn-outline-secondary btn-sm mr-2 mb-2">
                                                    <i class="fas fa-database"></i> Clear Cache
                                                </button>
                                                <button class="btn btn-outline-secondary btn-sm mr-2 mb-2">
                                                    <i class="fas fa-file-alt"></i> View Logs
                                                </button>
                                                <button class="btn btn-outline-secondary btn-sm mr-2 mb-2">
                                                    <i class="fas fa-sync-alt"></i> Restart App
                                                </button>
                                                <button class="btn btn-outline-warning btn-sm mr-2 mb-2">
                                                    <i class="fas fa-bug"></i> Debug Mode
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer Info -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card bg-light">
                    <div class="card-body text-center">
                        <p class="mb-1">@Model.ApplicationInfo.Copyright</p>
                        <p class="mb-0 text-muted">
                            <small>
                                Built with <i class="fas fa-heart text-danger"></i> for Hospital IT Management
                                | Environment: @Model.ApplicationInfo.Environment
                                | Framework: .NET @Model.ApplicationInfo.Framework
                            </small>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetSeverityColor(string severity) => severity switch
    {
        "Critical" => "danger",
        "High" => "warning",
        "Medium" => "info",
        "Low" => "secondary",
        _ => "secondary"
    };

    string GetStatusColor(string status) => status switch
    {
        "Open" => "danger",
        "In Progress" => "warning",
        "Resolved" => "success",
        "Closed" => "secondary",
        _ => "secondary"
    };

    string GetChangeTypeColor(string type) => type switch
    {
        "Feature" => "success",
        "Bug Fix" => "danger",
        "Enhancement" => "primary",
        "Security" => "warning",
        _ => "secondary"
    };
}

@section Scripts {
    <script>
        // Auto-refresh system status every 30 seconds
        setInterval(refreshSystemStatus, 30000);
        
        // Load initial status
        refreshSystemStatus();
        
        function refreshSystemStatus() {
            fetch('@Url.Action("GetSystemStatus", "About")')
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        document.getElementById('systemStatus').innerHTML = 
                            '<div class="alert alert-danger"><i class="fas fa-exclamation-triangle"></i> ' + data.error + '</div>';
                        return;
                    }
                    
                    document.getElementById('systemStatus').innerHTML = `
                        <div class="row">
                            <div class="col-6">
                                <div class="metric-item">
                                    <div class="metric-label">Uptime</div>
                                    <div class="metric-value">${data.uptime}</div>
                                </div>
                                <div class="metric-item">
                                    <div class="metric-label">Memory</div>
                                    <div class="metric-value">${data.memoryUsage}</div>
                                </div>
                                <div class="metric-item">
                                    <div class="metric-label">Active Users</div>
                                    <div class="metric-value">${data.activeUsers}</div>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="metric-item">
                                    <div class="metric-label">Version</div>
                                    <div class="metric-value">${data.version}</div>
                                </div>
                                <div class="metric-item">
                                    <div class="metric-label">Last Update</div>
                                    <div class="metric-value">${new Date(data.timestamp).toLocaleTimeString()}</div>
                                </div>
                                <div class="metric-item">
                                    <div class="metric-label">Disk Space</div>
                                    <div class="metric-value">${data.diskSpace}</div>
                                </div>
                            </div>
                        </div>
                    `;
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('systemStatus').innerHTML = 
                        '<div class="alert alert-warning"><i class="fas fa-exclamation-triangle"></i> Unable to load status</div>';
                });
        }
        
        function updateVersion() {
            const versionType = document.getElementById('versionType').value;
            const releaseNotes = document.getElementById('releaseNotes').value;
            
            if (!releaseNotes.trim()) {
                alert('Please enter release notes');
                return;
            }
            
            if (!confirm(`Are you sure you want to update to the next ${versionType} version?`)) {
                return;
            }
            
            fetch('@Url.Action("UpdateVersion", "About")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    versionType: versionType,
                    releaseNotes: releaseNotes
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(`Version updated successfully to ${data.newVersion}`);
                    location.reload();
                } else {
                    alert('Error: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to update version');
            });
        }
        
        function reportBug() {
            const title = document.getElementById('bugTitle').value;
            const category = document.getElementById('bugCategory').value;
            const severity = document.getElementById('bugSeverity').value;
            const description = document.getElementById('bugDescription').value;
            
            if (!title.trim() || !description.trim()) {
                alert('Please fill in all required fields');
                return;
            }
            
            fetch('@Url.Action("ReportBug", "About")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    title: title,
                    category: category,
                    severity: severity,
                    description: description
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(`Bug report submitted successfully! Report ID: ${data.bugId}`);
                    // Clear form
                    document.getElementById('bugTitle').value = '';
                    document.getElementById('bugDescription').value = '';
                    location.reload();
                } else {
                    alert('Error: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to submit bug report');
            });
        }
        
        function autoFixBugs() {
            if (!confirm('Run automatic bug fixes? This may take a few moments.')) {
                return;
            }
            
            fetch('@Url.Action("AutoFixBugs", "About")', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Auto-fix completed!\n\n' + data.results.join('\n'));
                } else {
                    alert('Auto-fix failed: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to run auto-fix');
            });
        }
    </script>
}
