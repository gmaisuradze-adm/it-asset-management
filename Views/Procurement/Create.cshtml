@model HospitalAssetTracker.Models.ProcurementRequest
@{
    ViewData["Title"] = "Create Procurement Request";
}

<h1>Create Procurement Request</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row">
    <div class="col-lg-8">
        <form asp-action="Create" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
            
            <div class="card">
                <div class="card-header">
                    <h5><i class="bi bi-info-circle"></i> Basic Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Title" class="form-label">Title *</label>
                                <input asp-for="Title" class="form-control" placeholder="Enter procurement title" required />
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Priority" class="form-label">Priority *</label>
                                <select asp-for="Priority" class="form-select" required>
                                    <option value="">Select Priority</option>
                                    <option value="Low">Low</option>
                                    <option value="Medium">Medium</option>
                                    <option value="High">High</option>
                                    <option value="Critical">Critical</option>
                                </select>
                                <span asp-validation-for="Priority" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">Description *</label>
                        <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe the procurement request" required></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="EstimatedBudget" class="form-label">Estimated Budget</label>
                                <input asp-for="EstimatedBudget" class="form-control" type="number" step="0.01" placeholder="0.00" />
                                <span asp-validation-for="EstimatedBudget" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="RequiredByDate" class="form-label">Required By Date</label>
                                <input asp-for="RequiredByDate" class="form-control" type="date" />
                                <span asp-validation-for="RequiredByDate" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="BusinessJustification" class="form-label">Business Justification</label>
                        <textarea asp-for="BusinessJustification" class="form-control" rows="3" placeholder="Explain the business need for this procurement"></textarea>
                        <span asp-validation-for="BusinessJustification" class="text-danger"></span>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input asp-for="IsUrgent" class="form-check-input" type="checkbox" />
                        <label asp-for="IsUrgent" class="form-check-label">
                            Mark as Urgent
                        </label>
                    </div>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h5><i class="bi bi-list"></i> Procurement Items</h5>
                </div>
                <div class="card-body">
                    <div id="procurement-items">
                        @if (Model.Items != null && Model.Items.Any())
                        {
                            var itemsList = Model.Items.ToList();
                            for (int i = 0; i < itemsList.Count; i++)
                            {
                                <div class="row procurement-item mb-3">
                                    <div class="col-md-3">
                                        <label class="form-label">Item Name</label>
                                        <input name="Items[@i].ItemName" value="@itemsList[i].ItemName" class="form-control" placeholder="Item name" />
                                    </div>
                                    <div class="col-md-3">
                                        <label class="form-label">Description</label>
                                        <input name="Items[@i].Description" value="@itemsList[i].Description" class="form-control" placeholder="Description" />
                                    </div>
                                    <div class="col-md-2">
                                        <label class="form-label">Quantity</label>
                                        <input name="Items[@i].Quantity" value="@itemsList[i].Quantity" class="form-control" type="number" min="1" />
                                    </div>
                                    <div class="col-md-2">
                                        <label class="form-label">Unit Price</label>
                                        <input name="Items[@i].EstimatedUnitPrice" value="@itemsList[i].EstimatedUnitPrice" class="form-control" type="number" step="0.01" />
                                    </div>
                                    <div class="col-md-2">
                                        <label class="form-label">Action</label>
                                        <button type="button" class="btn btn-danger btn-sm w-100" onclick="removeItem(this)">Remove</button>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="row procurement-item mb-3">
                                <div class="col-md-3">
                                    <label class="form-label">Item Name</label>
                                    <input name="items[0].ItemName" class="form-control" placeholder="Item name" />
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Description</label>
                                    <input name="items[0].Description" class="form-control" placeholder="Description" />
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Quantity</label>
                                    <input name="items[0].Quantity" class="form-control" type="number" min="1" value="1" />
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Unit Price</label>
                                    <input name="items[0].EstimatedUnitPrice" class="form-control" type="number" step="0.01" />
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Action</label>
                                    <button type="button" class="btn btn-danger btn-sm w-100" onclick="removeItem(this)">Remove</button>
                                </div>
                            </div>
                        }
                    </div>
                    
                    <button type="button" class="btn btn-success btn-sm" onclick="addItem()">
                        <i class="bi bi-plus"></i> Add Item
                    </button>
                </div>
            </div>
            
            <div class="mt-3">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-circle"></i> Create Procurement Request
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to List
                </a>
            </div>
        </form>
    </div>
    
    <div class="col-lg-4">
        <div class="card sticky-top" style="top: 20px;">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0"><i class="bi bi-book"></i> Request Guidelines</h5>
            </div>
            <div class="card-body">
                <h6 class="text-primary"><i class="bi bi-info-circle"></i> Before You Submit</h6>
                <ul class="list-unstyled">
                    <li class="mb-2"><i class="bi bi-check-circle text-success"></i> Ensure all required fields are completed</li>
                    <li class="mb-2"><i class="bi bi-check-circle text-success"></i> Provide detailed item descriptions</li>
                    <li class="mb-2"><i class="bi bi-check-circle text-success"></i> Include accurate quantity and pricing</li>
                    <li class="mb-2"><i class="bi bi-check-circle text-success"></i> Set realistic required dates</li>
                </ul>
                
                <hr>
                
                <h6 class="text-primary"><i class="bi bi-exclamation-triangle"></i> Priority Levels</h6>
                <div class="small">
                    <div class="mb-2">
                        <span class="badge bg-danger">Critical</span>
                        <div class="text-muted">Emergency/Safety-related items</div>
                    </div>
                    <div class="mb-2">
                        <span class="badge bg-warning">High</span>
                        <div class="text-muted">Urgent operational needs</div>
                    </div>
                    <div class="mb-2">
                        <span class="badge bg-info">Medium</span>
                        <div class="text-muted">Standard business requirements</div>
                    </div>
                    <div class="mb-2">
                        <span class="badge bg-secondary">Low</span>
                        <div class="text-muted">Nice-to-have items</div>
                    </div>
                </div>
                
                <hr>
                
                <h6 class="text-primary"><i class="bi bi-currency-dollar"></i> Budget Guidelines</h6>
                <ul class="list-unstyled small">
                    <li class="mb-1">• Under $1,000: Department approval</li>
                    <li class="mb-1">• $1,000 - $10,000: Manager approval</li>
                    <li class="mb-1">• Over $10,000: Executive approval</li>
                </ul>
                
                <hr>
                
                <h6 class="text-primary"><i class="bi bi-clock"></i> Processing Times</h6>
                <ul class="list-unstyled small">
                    <li class="mb-1">• Standard requests: 3-5 business days</li>
                    <li class="mb-1">• High priority: 1-2 business days</li>
                    <li class="mb-1">• Critical requests: Same day</li>
                </ul>
                
                <hr>
                
                <div class="alert alert-warning alert-sm">
                    <i class="bi bi-lightbulb"></i>
                    <strong>Tip:</strong> Include vendor quotes or specifications for faster processing.
                </div>
            </div>
        </div>
    </div>
</div>

<script>
let itemIndex = @(Model.Items?.Count ?? 1);

function addItem() {
    const container = document.getElementById('procurement-items');
    const newItem = document.createElement('div');
    newItem.className = 'row procurement-item mb-3';
    newItem.innerHTML = `
        <div class="col-md-3">
            <label class="form-label">Item Name</label>
            <input name="items[${itemIndex}].ItemName" class="form-control" placeholder="Item name" />
        </div>
        <div class="col-md-3">
            <label class="form-label">Description</label>
            <input name="items[${itemIndex}].Description" class="form-control" placeholder="Description" />
        </div>
        <div class="col-md-2">
            <label class="form-label">Quantity</label>
            <input name="items[${itemIndex}].Quantity" class="form-control" type="number" min="1" value="1" />
        </div>
        <div class="col-md-2">
            <label class="form-label">Unit Price</label>
            <input name="items[${itemIndex}].EstimatedUnitPrice" class="form-control" type="number" step="0.01" />
        </div>
        <div class="col-md-2">
            <label class="form-label">Action</label>
            <button type="button" class="btn btn-danger btn-sm w-100" onclick="removeItem(this)">Remove</button>
        </div>
    `;
    container.appendChild(newItem);
    itemIndex++;
}

function removeItem(button) {
    const container = document.getElementById('procurement-items');
    if (container.children.length > 1) {
        button.closest('.procurement-item').remove();
        updateItemIndexes();
    }
}

function updateItemIndexes() {
    const items = document.querySelectorAll('.procurement-item');
    items.forEach((item, index) => {
        const inputs = item.querySelectorAll('input');
        inputs.forEach(input => {
            const name = input.getAttribute('name');
            if (name && name.includes('items[')) {
                input.setAttribute('name', name.replace(/items\[\d+\]/, `items[${index}]`));
            }
        });
    });
    itemIndex = items.length;
}

// Form validation
(function() {
    'use strict';
    window.addEventListener('load', function() {
        var forms = document.getElementsByClassName('needs-validation');
        var validation = Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    }, false);
})();
</script>
