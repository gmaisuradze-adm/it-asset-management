@model HospitalAssetTracker.Models.RequestDashboardData
@{
    ViewData["Title"] = "Requests Dashboard";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-header">
                <h1 class="page-title">
                    <i class="fas fa-ticket-alt text-primary"></i> Requests Dashboard
                </h1>
                <p class="text-muted">Monitor IT requests, assignments, and service performance</p>
            </div>
        </div>
    </div>

    <!-- Key Metrics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.TotalRequests</h4>
                            <p class="mb-0">Total Requests</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-ticket-alt fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.PendingRequests</h4>
                            <p class="mb-0">Pending Approval</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-clock fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.InProgressRequests</h4>
                            <p class="mb-0">In Progress</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-cogs fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.OverdueRequests</h4>
                            <p class="mb-0">Overdue</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mb-4">
        <!-- Request Trends Chart -->
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-line me-2"></i>Request Trends (Last 30 Days)
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="trendsChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        <!-- Request Types Distribution -->
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-pie me-2"></i>Request Types
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="typesChart" width="300" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity and Priority Requests -->
    <div class="row">
        <!-- High Priority Requests -->
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-fire text-danger me-2"></i>High Priority Requests
                    </h5>
                    <a asp-action="Index" asp-route-priority="High" class="btn btn-sm btn-outline-danger">View All</a>
                </div>
                <div class="card-body">
                    @if (Model.HighPriorityRequests?.Any() == true)
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var request in Model.HighPriorityRequests.Take(5))
                            {
                                <div class="list-group-item border-0 px-0">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <h6 class="mb-1">
                                                <a href="/Requests/Details/@request.Id" class="text-decoration-none">
                                                    @request.Title
                                                </a>
                                            </h6>
                                            <p class="mb-1 text-muted small">@request.Description</p>
                                            <small class="text-muted">
                                                <i class="fas fa-user"></i> @request.RequestedByUser?.FirstName @request.RequestedByUser?.LastName
                                                | <i class="fas fa-calendar"></i> @request.RequestDate.ToString("MMM dd, yyyy")
                                            </small>
                                        </div>
                                        <div class="text-end">
                                            <span class="badge bg-danger">@request.Priority</span>
                                            <br>
                                            <span class="badge bg-@(request.Status == RequestStatus.Pending ? "warning" : 
                                                request.Status == RequestStatus.InProgress ? "info" : 
                                                request.Status == RequestStatus.Completed ? "success" : "secondary")">
                                                @request.Status
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center py-3">No high priority requests</p>
                    }
                </div>
            </div>
        </div>

        <!-- Recent Requests -->
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-history me-2"></i>Recent Activity
                    </h5>
                    <a asp-action="Index" class="btn btn-sm btn-outline-primary">View All</a>
                </div>
                <div class="card-body">
                    @if (Model.RecentRequests?.Any() == true)
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var request in Model.RecentRequests.Take(5))
                            {
                                <div class="list-group-item border-0 px-0">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <h6 class="mb-1">
                                                <a href="/Requests/Details/@request.Id" class="text-decoration-none">
                                                    @request.Title
                                                </a>
                                            </h6>
                                            <p class="mb-1 text-muted small">@request.RequestType</p>
                                            <small class="text-muted">
                                                <i class="fas fa-user"></i> @request.RequestedByUser?.FirstName @request.RequestedByUser?.LastName
                                                | <i class="fas fa-calendar"></i> @request.RequestDate.ToString("MMM dd, yyyy")
                                            </small>
                                        </div>
                                        <div class="text-end">
                                            <span class="badge bg-@(request.Priority == RequestPriority.Critical ? "danger" : 
                                                request.Priority == RequestPriority.High ? "warning" : 
                                                request.Priority == RequestPriority.Medium ? "info" : "secondary")">
                                                @request.Priority
                                            </span>
                                            <br>
                                            <span class="badge bg-@(request.Status == RequestStatus.Pending ? "warning" : 
                                                request.Status == RequestStatus.InProgress ? "info" : 
                                                request.Status == RequestStatus.Completed ? "success" : "secondary")">
                                                @request.Status
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center py-3">No recent requests</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- My Assignments Section (for IT Staff) -->
    @if (User.IsInRole("IT Support") || User.IsInRole("IT Manager"))
    {
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-user-clock me-2"></i>My Current Assignments
                        </h5>
                        <a asp-action="AssignedToMe" class="btn btn-sm btn-outline-info">View All My Assignments</a>
                    </div>
                    <div class="card-body">
                        @if (Model.MyAssignments?.Any() == true)
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Request</th>
                                            <th>Priority</th>
                                            <th>Type</th>
                                            <th>Requested By</th>
                                            <th>Due Date</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var request in Model.MyAssignments.Take(5))
                                        {
                                            <tr class="@(request.Priority == RequestPriority.Critical ? "table-danger" : "")">
                                                <td>
                                                    <a href="/Requests/Details/@request.Id" class="text-decoration-none">
                                                        @request.Title
                                                    </a>
                                                </td>
                                                <td>
                                                    <span class="badge bg-@(request.Priority == RequestPriority.Critical ? "danger" : 
                                                        request.Priority == RequestPriority.High ? "warning" : 
                                                        request.Priority == RequestPriority.Medium ? "info" : "secondary")">
                                                        @request.Priority
                                                    </span>
                                                </td>
                                                <td>@request.RequestType</td>
                                                <td>@request.RequestedByUser?.FirstName @request.RequestedByUser?.LastName</td>
                                                <td>@request.DueDate?.ToString("MMM dd, yyyy")</td>
                                                <td>
                                                    <span class="badge bg-@(request.Status == RequestStatus.Pending ? "warning" : 
                                                        request.Status == RequestStatus.InProgress ? "info" : 
                                                        request.Status == RequestStatus.Completed ? "success" : "secondary")">
                                                        @request.Status
                                                    </span>
                                                </td>
                                                <td>
                                                    <a href="/Requests/Details/@request.Id" class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <p class="text-muted text-center py-3">No current assignments</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Trends Chart
        const trendsCtx = document.getElementById('trendsChart').getContext('2d');
        new Chart(trendsCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.TrendLabels ?? new List<string>())),
                datasets: [{
                    label: 'Requests Created',
                    data: @Html.Raw(Json.Serialize(Model.TrendData ?? new List<int>())),
                    borderColor: '#007bff',
                    backgroundColor: 'rgba(0, 123, 255, 0.1)',
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Types Chart
        const typesCtx = document.getElementById('typesChart').getContext('2d');
        new Chart(typesCtx, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.TypeLabels ?? new List<string>())),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.TypeData ?? new List<int>())),
                    backgroundColor: [
                        '#FF6384',
                        '#36A2EB',
                        '#FFCE56',
                        '#4BC0C0',
                        '#9966FF',
                        '#FF9F40'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    </script>
}
