@model ITRequest

<!-- Assigned User -->
<div class="mb-3">
    <label class="form-label fw-bold">Assigned To:</label>
    <div id="assigned-user-info">
        @await Html.PartialAsync("_AssignedUserInfo", Model)
    </div>
</div>
<hr>

<!-- Action Buttons -->
<div class="d-grid gap-2">
    @if ((bool)ViewData["canTakeOwnership"]!)
    {
        <button id="take-ownership-btn" class="btn btn-primary"><i class="bi bi-person-fill-check"></i> Take Ownership</button>
    }
</div>

<!-- Assign Form -->
@if ((bool)ViewData["canAssign"]!)
{
    <form id="assign-form" class="mt-3">
        @Html.AntiForgeryToken()
        <label for="assign-user-select" class="form-label fw-bold">Assign / Re-assign</label>
        <div class="input-group">
            <select id="assign-user-select" name="assignedToUserId" class="form-select" asp-items="@(ViewBag.ITUsers as SelectList)">
                <option value="">Select a user...</option>
            </select>
            <button class="btn btn-outline-primary" type="submit" id="assign-submit-btn">
                <i class="bi bi-send"></i>
            </button>
        </div>
    </form>
}

<!-- Status Management Actions -->
<div class="mt-3 d-grid gap-2">
    @if ((bool)ViewData["canComplete"]!)
    {
        <button id="complete-btn" class="btn btn-success"><i class="bi bi-check2-all"></i> Mark as Complete</button>
    }
    @if ((bool)ViewData["canPlaceOnHold"]!)
    {
        <button id="onhold-btn" class="btn btn-warning text-dark"><i class="bi bi-pause-circle"></i> Place on Hold</button>
    }
    @if ((bool)ViewData["canResume"]!)
    {
        <button id="resume-btn" class="btn btn-info"><i class="bi bi-play-circle"></i> Resume Request</button>
    }
</div>

@if ((bool)ViewData["canCancel"]!)
{
    <div class="mt-3 border-top pt-3">
        <div class="d-grid">
            <button id="cancel-btn" class="btn btn-danger"><i class="bi bi-x-circle"></i> Cancel Request</button>
        </div>
    </div>
}
