@model PagedResult<ITRequest>
@{
    ViewData["Title"] = "IT Requests";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="bi bi-clipboard-check"></i> IT Requests</h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="bi bi-plus-circle"></i> New Request
    </a>
</div>

<!-- Search and Filter Form -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Search</label>
                <input type="text" class="form-control" name="SearchTerm" value="@ViewBag.SearchTerm" placeholder="Search requests...">
            </div>
            <div class="col-md-2">
                <label class="form-label">Type</label>
                <select class="form-select" name="RequestType">
                    <option value="">All Types</option>
                    @foreach (var type in (ViewBag.RequestTypes as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>())
                    {
                        <option value="@type.Value" selected="@type.Selected">@type.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Status</label>
                <select class="form-select" name="Status">
                    <option value="">All Statuses</option>
                    @foreach (var status in (ViewBag.Statuses as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>())
                    {
                        <option value="@status.Value" selected="@status.Selected">@status.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Priority</label>
                <select class="form-select" name="Priority">
                    <option value="">All Priorities</option>
                    @foreach (var priority in (ViewBag.Priorities as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>())
                    {
                        <option value="@priority.Value" selected="@priority.Selected">@priority.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Department</label>
                <input type="text" class="form-control" name="Department" value="@ViewBag.Department" placeholder="Department">
            </div>
            <div class="col-md-1">
                <label class="form-label">&nbsp;</label>
                <button type="submit" class="btn btn-outline-primary d-block">
                    <i class="bi bi-search"></i> Search
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Requests Table -->
<div class="card">
    <div class="card-body">
        @if (Model.Items.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped" id="requestsTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Request #</th>
                            <th>Title</th>
                            <th>Type</th>
                            <th>Priority</th>
                            <th>Status</th>
                            <th>Requester</th>
                            <th>Department</th>
                            <th>Created</th>
                            <th>Due Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var request in Model.Items)
                        {
                            <tr>
                                <td>
                                    <a asp-action="Details" asp-route-id="@request.Id" class="text-decoration-none">
                                        @request.RequestNumber
                                    </a>
                                </td>
                                <td>@request.Title</td>
                                <td>
                                    <span class="badge bg-secondary">@request.RequestType.ToString().Replace("_", " ")</span>
                                </td>
                                <td>
                                    <span class="badge @GetPriorityBadgeClass(request.Priority)">
                                        @request.Priority
                                    </span>
                                </td>
                                <td>
                                    <span class="badge @GetStatusBadgeClass(request.Status)">
                                        @request.Status.ToString()
                                    </span>
                                </td>
                                <td>@request.RequestedByUser?.FirstName @request.RequestedByUser?.LastName</td>
                                <td>@request.Department</td>
                                <td>@request.CreatedDate.ToString("MM/dd/yyyy")</td>
                                <td>
                                    @if (request.RequiredByDate.HasValue)
                                    {
                                        <span class="@(request.RequiredByDate.Value < DateTime.Now && request.Status != RequestStatus.Completed ? "text-danger" : "")">
                                            @request.RequiredByDate.Value.ToString("MM/dd/yyyy")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@request.Id" class="btn btn-sm btn-outline-primary" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        @if (User.IsInRole("Admin") || User.IsInRole("IT Support") || User.IsInRole("Asset Manager"))
                                        {
                                            if (request.Status != RequestStatus.Completed && request.Status != RequestStatus.Cancelled)
                                            {
                                                <a asp-action="Edit" asp-route-id="@request.Id" class="btn btn-sm btn-outline-secondary" title="Edit">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                            }
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Requests pagination">
                    <ul class="pagination justify-content-center">
                        @if (Model.PageNumber > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-RequestType="@ViewBag.RequestType" asp-route-Status="@ViewBag.Status" asp-route-Priority="@ViewBag.Priority" asp-route-Department="@ViewBag.Department">Previous</a>
                            </li>
                        }
                        
                        @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-RequestType="@ViewBag.RequestType" asp-route-Status="@ViewBag.Status" asp-route-Priority="@ViewBag.Priority" asp-route-Department="@ViewBag.Department">@i</a>
                            </li>
                        }
                        
                        @if (Model.PageNumber < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)" asp-route-SearchTerm="@ViewBag.SearchTerm" asp-route-RequestType="@ViewBag.RequestType" asp-route-Status="@ViewBag.Status" asp-route-Priority="@ViewBag.Priority" asp-route-Department="@ViewBag.Department">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-4">
                <i class="bi bi-clipboard-x display-1 text-muted"></i>
                <h4 class="mt-3">No requests found</h4>
                <p class="text-muted">No requests match your current filters.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create Your First Request
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTables with sorting and searching disabled (we handle it server-side)
            $('#requestsTable').DataTable({
                paging: false,
                searching: false,
                info: false,
                ordering: false
            });
        });
    </script>
}

@functions {
    private string GetStatusBadgeClass(RequestStatus status) => status switch
    {
        RequestStatus.Submitted => "bg-info text-white",
        RequestStatus.InProgress => "bg-warning text-dark",
        RequestStatus.OnHold => "bg-secondary text-white",
        RequestStatus.Completed => "bg-success text-white",
        RequestStatus.Cancelled => "bg-danger text-white",
        _ => "bg-light text-dark"
    };

    private string GetPriorityBadgeClass(RequestPriority priority) => priority switch
    {
        RequestPriority.Critical => "bg-danger text-white",
        RequestPriority.High => "bg-warning text-dark",
        RequestPriority.Medium => "bg-info text-white",
        RequestPriority.Low => "bg-success text-white",
        _ => "bg-secondary text-white"
    };
}
