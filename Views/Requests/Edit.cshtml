@using HospitalAssetTracker.Models
@using HospitalAssetTracker.Models.RequestViewModels
@model EditRequestViewModel

@{
    ViewData["Title"] = "Edit Request";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>@ViewData["Title"] - #@Model.RequestNumber</h2>
    <div>
        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Details
        </a>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <h5 class="card-title mb-0"><i class="bi bi-pencil-square me-2"></i>Edit Request Information</h5>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post" id="editRequestForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="RequestedByUserId" />
                    <input type="hidden" asp-for="RequestDate" />

                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label asp-for="RequestType" class="form-label">Request Type <span class="text-danger">*</span></label>
                            <select asp-for="RequestType" class="form-select" asp-items="Model.RequestTypes" id="requestTypeSelect">
                                <option value="">Select request type...</option>
                            </select>
                            <span asp-validation-for="RequestType" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Title" class="form-label">Title <span class="text-danger">*</span></label>
                        <input asp-for="Title" class="form-control" placeholder="Enter request title" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="4" 
                                  placeholder="Provide detailed description of the request..."></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label asp-for="RequiredByDate" class="form-label">Due Date</label>
                            <input asp-for="RequiredByDate" type="date" class="form-control" />
                            <span asp-validation-for="RequiredByDate" class="text-danger"></span>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label asp-for="Status" class="form-label">Status</label>
                            @{
                                var statusDisplayValue = Enum.IsDefined(typeof(RequestStatus), Model.Status) ? Model.Status.ToString() : $"Unknown (Value: {(int)Model.Status})";
                            }
                            <input type="text" class="form-control" value="@statusDisplayValue" readonly />
                        </div>
                        @if (User.IsInRole("Admin") || User.IsInRole("IT Support"))
                        {
                            <div class="col-md-4 mb-3">
                                <label asp-for="AssignedToUserId" class="form-label">Assign to Staff</label>
                                <select asp-for="AssignedToUserId" class="form-select" asp-items="Model.AssignableUsers">
                                    <option value="">Assign later</option>
                                </select>
                                <span asp-validation-for="AssignedToUserId" class="text-danger"></span>
                            </div>
                        }
                    </div>

                    <hr class="my-4">

                    <!-- Asset-related fields -->
                    <div id="assetSection" class="mb-3 p-3 bg-light rounded" style="display: none;">
                        <h5 class="mb-3">Asset Information</h5>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="LocationId" class="form-label">Asset Location</label>
                                <select id="LocationId" name="LocationId" class="form-select" asp-items="Model.Locations">
                                    <option value="">Select location to filter assets...</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="DamagedAssetId" class="form-label">Related Damaged Asset</label>
                                <select asp-for="DamagedAssetId" id="DamagedAssetId" class="form-select" asp-items="Model.Assets">
                                    <option value="">Select related asset (optional)...</option>
                                </select>
                                <span asp-validation-for="DamagedAssetId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="mt-2">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="unmanagedAssetCheck">
                                <label class="form-check-label" for="unmanagedAssetCheck">
                                    Asset is not in the system (unmanaged)
                                </label>
                            </div>
                        </div>
                        <div id="unmanagedAssetNotes" class="mt-3" style="display: none;">
                            <label asp-for="DisposalNotesForUnmanagedAsset" class="form-label">Notes for Unmanaged Asset (e.g., for disposal)</label>
                            <textarea asp-for="DisposalNotesForUnmanagedAsset" class="form-control" rows="3" placeholder="Provide details about the unmanaged asset, its condition, and reason for disposal/replacement."></textarea>
                            <span asp-validation-for="DisposalNotesForUnmanagedAsset" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Equipment request fields -->
                    <div id="equipmentSection" class="mb-3 p-3 bg-light rounded" style="display: none;">
                        <h5 class="mb-3">Equipment/Replacement Details</h5>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="RequestedItemCategory" class="form-label">Item Category <span class="text-danger">*</span></label>
                                <select asp-for="RequestedItemCategory" class="form-select" asp-items="Model.ItemCategories">
                                    <option value="">Select category...</option>
                                </select>
                                <span asp-validation-for="RequestedItemCategory" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="EstimatedCost" class="form-label">Estimated Cost</label>
                                <input asp-for="EstimatedCost" type="number" step="0.01" class="form-control" placeholder="Enter estimated cost" />
                                <span asp-validation-for="EstimatedCost" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="RequestedItemSpecifications" class="form-label">Item Specifications <span class="text-danger">*</span></label>
                            <textarea asp-for="RequestedItemSpecifications" class="form-control" rows="3" placeholder="Enter detailed specifications for the requested item..."></textarea>
                            <span asp-validation-for="RequestedItemSpecifications" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="BusinessJustification" class="form-label">Business Justification <span class="text-danger">*</span></label>
                            <textarea asp-for="BusinessJustification" class="form-control" rows="3" placeholder="Explain why this item is needed..."></textarea>
                            <span asp-validation-for="BusinessJustification" class="text-danger"></span>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-8">
                                <label asp-for="RequiredInventoryItemId" class="form-label">Required Item (Replacement)</label>
                                <select asp-for="RequiredInventoryItemId" class="form-select" asp-items="Model.InventoryItems">
                                    <option value="">Select a replacement item if available</option>
                                </select>
                                <span asp-validation-for="RequiredInventoryItemId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end mt-4">
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary me-2">
                            <i class="bi bi-x-circle"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> Save Changes
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <!-- Details sidebar -->
        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <h5 class="card-title mb-0"><i class="bi bi-info-circle me-2"></i>Request Details</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-sm-5">Requestor:</dt>
                    <dd class="col-sm-7">@Model.RequestedByUserName</dd>

                    <dt class="col-sm-5">Department:</dt>
                    <dd class="col-sm-7">@Model.RequestedByUserDepartment</dd>

                    <dt class="col-sm-5">Created:</dt>
                    <dd class="col-sm-7">@Model.RequestDate.ToString("g")</dd>

                    <dt class="col-sm-5">Last Update:</dt>
                    <dd class="col-sm-7">@(Model.LastUpdatedDate.HasValue ? Model.LastUpdatedDate.Value.ToString("g") : "N/A")</dd>
                </dl>
            </div>
        </div>

        <div class="card shadow-sm mt-4">
            <div class="card-header bg-light">
                <h5 class="card-title mb-0"><i class="bi bi-list-check me-2"></i>Activity Log</h5>
            </div>
            <div class="card-body" style="max-height: 400px; overflow-y: auto;">
                @if (Model.Activities != null && Model.Activities.Any())
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var activity in Model.Activities.OrderByDescending(a => a.ActivityDate))
                        {
                            <li class="list-group-item border-0">
                                <div class="d-flex w-100 justify-content-between">
                                    <h6 class="mb-1">@activity.ActivityType</h6>
                                    <small class="text-muted">@activity.ActivityDate.ToString("g")</small>
                                </div>
                                <p class="mb-1">@Html.Raw(activity.Description?.Replace("\n", "<br />"))</p>
                                <small class="text-muted">by @activity.User?.FullName</small>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-muted">No activity recorded yet.</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // Enhanced Edit Request functionality
            
            function toggleSections() {
                var requestType = $('#requestTypeSelect').val();
                console.log('Request Type in Edit:', requestType);
                
                // Reset all sections
                $('#assetSection, #equipmentSection').hide();
                
                // Show sections based on request type (using integer values)
                switch(requestType) {
                    case '2': // HardwareRepair 
                    case '3': // MaintenanceService
                    case '4': // HardwareReplacement
                    case '7': // Incident
                        $('#assetSection').show();
                        break;
                }

                switch(requestType) {
                    case '1': // NewEquipment
                    case '4': // HardwareReplacement
                        $('#equipmentSection').show();
                        break;
                }
            }

            function toggleUnmanagedNotes() {
                if ($('#unmanagedAssetCheck').is(':checked')) {
                    $('#unmanagedAssetNotes').show();
                    $('#DamagedAssetId').val('').prop('disabled', true);
                    $('#DamagedAssetId').removeClass('input-validation-error');
                } else {
                    $('#unmanagedAssetNotes').hide();
                    $('#DamagedAssetId').prop('disabled', false);
                }
            }

            function validateFormData() {
                var isValid = true;
                var errors = [];

                // Validate required fields based on request type
                var requestType = $('#requestTypeSelect').val();
                
                if (['2', '3', '4', '7'].includes(requestType)) { // Asset-related requests
                    var assetId = $('#DamagedAssetId').val();
                    var isUnmanaged = $('#unmanagedAssetCheck').is(':checked');
                    
                    if (!assetId && !isUnmanaged) {
                        errors.push('Asset-related requests require either selecting an asset or marking as unmanaged.');
                        isValid = false;
                    }
                }

                if (['1', '4'].includes(requestType)) { // Equipment requests
                    if (!$('#RequestedItemCategory').val() && !$('#RequiredInventoryItemId').val()) {
                        errors.push('Equipment requests require either a category or an inventory item.');
                        isValid = false;
                    }
                }

                return { isValid: isValid, errors: errors };
            }

            function showValidationErrors(errors) {
                if (errors.length > 0) {
                    var errorHtml = '<div class="alert alert-warning"><ul class="mb-0">';
                    errors.forEach(function(error) {
                        errorHtml += '<li>' + error + '</li>';
                    });
                    errorHtml += '</ul></div>';
                    
                    // Insert after form opening tag
                    $('form').prepend(errorHtml);
                    
                    // Scroll to top
                    $('html, body').animate({
                        scrollTop: $('form').offset().top - 50
                    }, 500);
                }
            }

            // Event handlers
            $('#requestTypeSelect').change(function() {
                toggleSections();
                $('.alert-warning').remove(); // Clear previous validation messages
            });
            
            $('#unmanagedAssetCheck').change(toggleUnmanagedNotes);

            // Form submission validation
            $('form').on('submit', function(e) {
                $('.alert-warning').remove(); // Clear previous validation messages
                
                var validation = validateFormData();
                if (!validation.isValid) {
                    e.preventDefault();
                    showValidationErrors(validation.errors);
                    return false;
                }

                // Show loading state
                $('button[type="submit"]').prop('disabled', true)
                    .html('<span class="spinner-border spinner-border-sm me-2"></span>Saving...');
            });

            // Initialize on page load
            toggleSections();
            toggleUnmanagedNotes();

            // Check if DisposalNotesForUnmanagedAsset has value on load
            if ($('#DisposalNotesForUnmanagedAsset').val() && $('#DisposalNotesForUnmanagedAsset').val().trim() !== '') {
                $('#unmanagedAssetCheck').prop('checked', true);
                toggleUnmanagedNotes();
            }

            console.log('Edit Request form initialized successfully');
        });

        // Global toast function (if not available elsewhere)
        function showToast(type, message) {
            if (typeof Swal !== 'undefined') {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    icon: type,
                    title: message
                });
            } else {
                console.log(type + ': ' + message);
            }
        }
    </script>
}
