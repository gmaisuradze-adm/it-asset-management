@model List<BugTracking>
@{
    ViewData["Title"] = "ბაგების ტრეკინგი";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title mb-0">
                        <i class="bi bi-bug"></i> ბაგების ტრეკინგი
                    </h3>
                    <div>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createBugModal">
                            <i class="bi bi-plus-circle"></i> ახალი ბაგი
                        </button>
                        <button class="btn btn-info" onclick="loadAnalytics()">
                            <i class="bi bi-graph-up"></i> ანალიტიკა
                        </button>
                        <div class="btn-group">
                            <button class="btn btn-success" onclick="bulkFixBugs()">
                                <i class="bi bi-check-all"></i> ყველას გამოსწორება
                            </button>
                            <button class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown">
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" onclick="exportBugs('json')">
                                    <i class="bi bi-download"></i> JSON ექსპორტი
                                </a></li>
                                <li><a class="dropdown-item" href="#" onclick="exportBugs('csv')">
                                    <i class="bi bi-file-earmark-spreadsheet"></i> CSV ექსპორტი
                                </a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#versionManagementModal">
                                    <i class="bi bi-gear"></i> ვერსიის მენეჯმენტი
                                </a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Statistics Cards -->
                    <div class="row mb-4" id="statsCards">
                        <div class="col-md-3">
                            <div class="card bg-primary text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <h4 class="mb-0" id="totalBugs">-</h4>
                                            <p class="mb-0">სულ ბაგები</p>
                                        </div>
                                        <i class="bi bi-bug-fill fs-1"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-danger text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <h4 class="mb-0" id="openBugs">-</h4>
                                            <p class="mb-0">ღია ბაგები</p>
                                        </div>
                                        <i class="bi bi-exclamation-triangle-fill fs-1"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-success text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <h4 class="mb-0" id="fixedBugs">-</h4>
                                            <p class="mb-0">გამოსწორებული</p>
                                        </div>
                                        <i class="bi bi-check-circle-fill fs-1"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-info text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <h4 class="mb-0" id="fixRate">-</h4>
                                            <p class="mb-0">გამოსწორების რეიტი</p>
                                        </div>
                                        <i class="bi bi-percent fs-1"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Current Version Info -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i>
                                <strong>მიმდინარე ვერსია:</strong> <span id="currentVersion">@ViewBag.VersionStats?.CurrentVersion</span>
                                <button class="btn btn-sm btn-outline-info ms-2" onclick="showVersionHistory()">
                                    <i class="bi bi-clock-history"></i> ვერსიების ისტორია
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Charts Row -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">ბაგები მოდულების მიხედვით</h5>
                                </div>
                                <div class="card-body">
                                    <canvas id="moduleChart" height="200"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">ბაგები სიმწვავის მიხედვით</h5>
                                </div>
                                <div class="card-body">
                                    <canvas id="severityChart" height="200"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Bugs Table -->
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>
                                        <input type="checkbox" id="selectAll" onchange="toggleAllBugs()">
                                    </th>
                                    <th>ID</th>
                                    <th>სათაური</th>
                                    <th>მოდული</th>
                                    <th>სერიოზულობა</th>
                                    <th>სტატუსი</th>
                                    <th>შეტყობინების თარიღი</th>
                                    <th>მოქმედებები</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var bug in Model)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" name="selectedBugs" value="@bug.Id">
                                        </td>
                                        <td>@bug.Id</td>
                                        <td>
                                            <strong>@bug.BugTitle</strong>
                                            @if (!string.IsNullOrEmpty(bug.BugDescription))
                                            {
                                                <br><small class="text-muted">@bug.BugDescription</small>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@bug.ModuleName</span>
                                        </td>
                                        <td>
                                            @switch (bug.Severity)
                                            {
                                                case "Critical":
                                                    <span class="badge bg-danger">კრიტიკული</span>
                                                    break;
                                                case "High":
                                                    <span class="badge bg-warning">მაღალი</span>
                                                    break;
                                                case "Medium":
                                                    <span class="badge bg-info">საშუალო</span>
                                                    break;
                                                case "Low":
                                                    <span class="badge bg-success">დაბალი</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-secondary">@bug.Severity</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            @switch (bug.Status)
                                            {
                                                case "Open":
                                                    <span class="badge bg-danger">ღია</span>
                                                    break;
                                                case "InProgress":
                                                    <span class="badge bg-warning">მუშავდება</span>
                                                    break;
                                                case "Fixed":
                                                    <span class="badge bg-success">გამოსწორებული</span>
                                                    break;
                                                case "Closed":
                                                    <span class="badge bg-secondary">დახურული</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-secondary">@bug.Status</span>
                                                    break;
                                            }
                                        </td>
                                        <td>@bug.ReportedDate.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>
                                            @if (bug.Status == "Open" || bug.Status == "InProgress")
                                            {
                                                <button class="btn btn-sm btn-success" 
                                                        onclick="markAsFixed(@bug.Id, '@bug.BugTitle')">
                                                    <i class="bi bi-check"></i> გამოსწორება
                                                </button>
                                            }
                                            <button class="btn btn-sm btn-info" 
                                                    onclick="viewBugDetails(@bug.Id)">
                                                <i class="bi bi-eye"></i> ნახვა
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-check-circle-fill text-success" style="font-size: 3rem;"></i>
                            <h4 class="mt-3">ღია ბაგები არ არის!</h4>
                            <p class="text-muted">ყველა ბაგი გამოსწორებულია ან დახურულია.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Bug Modal -->
<div class="modal fade" id="createBugModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ახალი ბაგის დამატება</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="bugForm" method="post" action="@Url.Action("Create")">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label for="BugTitle" class="form-label">სათაური *</label>
                        <input type="text" class="form-control" name="BugTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="BugDescription" class="form-label">აღწერა</label>
                        <textarea class="form-control" name="BugDescription" rows="3"></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="ModuleName" class="form-label">მოდული *</label>
                                <input type="text" class="form-control" name="ModuleName" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="Severity" class="form-label">სერიოზულობა</label>
                                <select class="form-select" name="Severity">
                                    <option value="Low">დაბალი</option>
                                    <option value="Medium" selected>საშუალო</option>
                                    <option value="High">მაღალი</option>
                                    <option value="Critical">კრიტიკული</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="ErrorMessage" class="form-label">შეცდომის შეტყობინება</label>
                        <textarea class="form-control" name="ErrorMessage" rows="2"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="StackTrace" class="form-label">Stack Trace</label>
                        <textarea class="form-control" name="StackTrace" rows="4"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">გაუქმება</button>
                    <button type="submit" class="btn btn-primary">შემოქმედება</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Version Management Modal -->
<div class="modal fade" id="versionManagementModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ვერსიის მენეჯმენტი</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6>ახალი ვერსიის შექმნა</h6>
                        <div class="mb-3">
                            <label for="newVersionNumber" class="form-label">ვერსიის ნომერი *</label>
                            <input type="text" class="form-control" id="newVersionNumber" placeholder="1.2.0">
                        </div>
                        <div class="mb-3">
                            <label for="newReleaseNotes" class="form-label">გამოშვების ჩანაწერები</label>
                            <textarea class="form-control" id="newReleaseNotes" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="newFeaturesAdded" class="form-label">დამატებული ფუნქციები</label>
                            <input type="number" class="form-control" id="newFeaturesAdded" value="0">
                        </div>
                        <button type="button" class="btn btn-success" onclick="createNewVersion()">
                            <i class="bi bi-plus-circle"></i> ვერსიის შექმნა
                        </button>
                    </div>
                    <div class="col-md-6">
                        <h6>ვერსიების ისტორია</h6>
                        <div id="versionHistoryContainer">
                            <div class="text-center">
                                <div class="spinner-border spinner-border-sm" role="status">
                                    <span class="visually-hidden">ჩატვირთვა...</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">დახურვა</button>
            </div>
        </div>
    </div>
</div>

<!-- Fix Bug Modal -->
<div class="modal fade" id="fixBugModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ბაგის გამოსწორება</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>ბაგი: <strong id="fixBugTitle"></strong></p>
                <div class="mb-3">
                    <label for="fixDescription" class="form-label">გამოსწორების აღწერა *</label>
                    <textarea class="form-control" id="fixDescription" rows="3" required></textarea>
                </div>
                <div class="mb-3">
                    <label for="filesChanged" class="form-label">შეცვლილი ფაილები</label>
                    <input type="text" class="form-control" id="filesChanged" 
                           placeholder="მაგ: Controllers/AssetController.cs, Services/AssetService.cs">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">გაუქმება</button>
                <button type="button" class="btn btn-success" onclick="submitFix()">გამოსწორება</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
let currentBugId = 0;

// Load analytics on page load
$(document).ready(function() {
    loadAnalytics();
});

function loadAnalytics() {
    $.get('@Url.Action("BugStats")', function(data) {
        if (data.TotalBugs !== undefined) {
            $('#totalBugs').text(data.TotalBugs);
            $('#openBugs').text(data.OpenBugs);
            $('#fixedBugs').text(data.FixedBugs);
            $('#fixRate').text(Math.round(data.FixRate) + '%');
            
            // Update charts if they exist
            updateBugCharts(data);
        }
    }).fail(function() {
        console.error('Failed to load bug analytics');
    });
}

function updateBugCharts(data) {
    // Module statistics chart
    if (data.ModuleStats && data.ModuleStats.length > 0) {
        const moduleLabels = data.ModuleStats.map(x => x.Module);
        const moduleData = data.ModuleStats.map(x => x.Count);
        
        // Create or update module chart
        createModuleChart(moduleLabels, moduleData);
    }
    
    // Severity statistics chart
    if (data.SeverityStats && data.SeverityStats.length > 0) {
        const severityLabels = data.SeverityStats.map(x => x.Severity);
        const severityData = data.SeverityStats.map(x => x.Count);
        
        createSeverityChart(severityLabels, severityData);
    }
}

function createModuleChart(labels, data) {
    const ctx = document.getElementById('moduleChart');
    if (ctx) {
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: [
                        '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', 
                        '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'ბაგები მოდულების მიხედვით'
                    }
                }
            }
        });
    }
}

function createSeverityChart(labels, data) {
    const ctx = document.getElementById('severityChart');
    if (ctx) {
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'ბაგების რაოდენობა',
                    data: data,
                    backgroundColor: [
                        '#dc3545', // High - Red
                        '#ffc107', // Medium - Yellow
                        '#28a745'  // Low - Green
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'ბაგები სიმწვავის მიხედვით'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
}

function bulkFixBugs() {
    // Get selected bug IDs
    const selectedBugs = [];
    $('input[name="selectedBugs"]:checked').each(function() {
        selectedBugs.push(parseInt($(this).val()));
    });
    
    if (selectedBugs.length === 0) {
        alert('აირჩიეთ მინიმუმ ერთი ბაგი');
        return;
    }
    
    const fixDescription = prompt('გამოსწორების აღწერა:');
    if (!fixDescription) return;
    
    const bulkData = {
        BugIds: selectedBugs,
        FixDescription: fixDescription,
        FilesChanged: ''
    };
    
    $.ajax({
        url: '@Url.Action("BulkFixBugs")',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(bulkData),
        success: function(response) {
            if (response.success) {
                alert('ბაგების მასიური გამოსწორება დასრულდა');
                location.reload();
            } else {
                alert(response.message || 'შეცდომა');
            }
        },
        error: function() {
            alert('შეცდომა სერვერთან კომუნიკაციისას');
        }
    });
}

function exportBugs(format) {
    window.location.href = '@Url.Action("ExportBugs")?format=' + format;
}

function createNewVersion() {
    const versionNumber = $('#newVersionNumber').val();
    const releaseNotes = $('#newReleaseNotes').val();
    const featuresAdded = parseInt($('#newFeaturesAdded').val()) || 0;
    
    if (!versionNumber.trim()) {
        alert('ვერსიის ნომერი აუცილებელია');
        return;
    }
    
    const versionData = {
        VersionNumber: versionNumber,
        ReleaseNotes: releaseNotes,
        FeaturesAdded: featuresAdded
    };
    
    $.ajax({
        url: '@Url.Action("CreateNewVersion")',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(versionData),
        success: function(response) {
            if (response.success) {
                $('#versionManagementModal').modal('hide');
                alert('ახალი ვერსია წარმატებით შეიქმნა');
                location.reload();
            } else {
                alert(response.message || 'შეცდომა');
            }
        },
        error: function() {
            alert('შეცდომა სერვერთან კომუნიკაციისას');
        }
    });
}

function toggleAllBugs() {
    const selectAll = document.getElementById('selectAll');
    const checkboxes = document.querySelectorAll('input[name="selectedBugs"]');
    
    checkboxes.forEach(checkbox => {
        checkbox.checked = selectAll.checked;
    });
}

function markAsFixed(bugId, bugTitle) {
    currentBugId = bugId;
    $('#fixBugTitle').text(bugTitle);
    $('#fixBugModal').modal('show');
}

function submitFix() {
    const fixDescription = $('#fixDescription').val();
    const filesChanged = $('#filesChanged').val();
    
    if (!fixDescription.trim()) {
        alert('გამოსწორების აღწერა აუცილებელია');
        return;
    }
    
    $.post('@Url.Action("MarkAsFixed")', {
        id: currentBugId,
        fixDescription: fixDescription,
        filesChanged: filesChanged
    }, function(response) {
        if (response.success) {
            $('#fixBugModal').modal('hide');
            location.reload();
        } else {
            alert(response.message || 'შეცდომა');
        }
    });
}

function viewBugDetails(bugId) {
    // Implement bug details view
    console.log('View bug details:', bugId);
}

function showVersionHistory() {
    $.get('@Url.Action("VersionHistory")', function(data) {
        // Show version history in modal or sidebar
        console.log('Version history:', data);
    });
}

// Auto-report JavaScript errors
window.addEventListener('error', function(e) {
    const errorData = {
        title: 'JavaScript Error: ' + e.message,
        description: 'Automatic error detection from frontend',
        moduleName: 'Frontend',
        errorMessage: e.message,
        stackTrace: e.error ? e.error.stack : 'No stack trace available'
    };
    
    $.post('@Url.Action("AutoReport")', errorData, function(response) {
        console.log('Auto-reported error:', response);
    });
});
</script>

@section Styles {
    <style>
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border: 1px solid rgba(0, 0, 0, 0.125);
        }
        
        .badge {
            font-size: 0.75em;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        .fs-1 {
            font-size: 2.5rem !important;
        }
    </style>
}
