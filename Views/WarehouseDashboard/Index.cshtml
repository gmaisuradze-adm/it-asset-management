@model HospitalAssetTracker.Models.WarehouseDashboardViewModel
@{
    ViewData["Title"] = "Advanced Warehouse Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-header">
                <h1 class="page-title">
                    <i class="fas fa-warehouse me-2"></i>
                    Advanced Warehouse Management Dashboard
                </h1>
                <p class="text-muted">Intelligent inventory management with predictive analytics and automated workflows</p>
            </div>
        </div>
    </div>

    <!-- Key Metrics Row -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.TotalItems</h4>
                            <p class="mb-0">Total Items</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-boxes fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.LowStockItems</h4>
                            <p class="mb-0">Low Stock Items</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.CriticalStockItems</h4>
                            <p class="mb-0">Critical Stock</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-times-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0">@Model.OverstockedItems</h4>
                            <p class="mb-0">Overstocked Items</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-layer-group fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Advanced Analytics Row -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-line me-2"></i>
                        Advanced Warehouse Analytics
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var action in Model.QuickActions)
                        {
                            <div class="col-lg-6 mb-3">
                                <div class="card border-left-primary h-100">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center">
                                            <div class="me-3">
                                                <i class="fas fa-@action.Icon fa-2x text-primary"></i>
                                            </div>
                                            <div class="flex-grow-1">
                                                <h6 class="mb-1">@action.Title</h6>
                                                <p class="text-muted mb-2 small">@action.Description</p>
                                                <form method="post" asp-action="@action.Action" class="d-inline">
                                                    <button type="submit" class="btn btn-primary btn-sm">
                                                        <i class="fas fa-play me-1"></i>Execute
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-bell me-2"></i>
                        Stock Alerts
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.StockAlerts.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var alert in Model.StockAlerts.Take(5))
                            {
                                <div class="list-group-item px-0">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <h6 class="mb-1">@alert.ItemName</h6>
                                            <p class="mb-1 small text-muted">@alert.ItemCode</p>
                                            <small class="text-danger">
                                                <i class="fas fa-exclamation-circle me-1"></i>
                                                @alert.AlertType
                                            </small>
                                        </div>
                                        <span class="badge bg-@(alert.CurrentStock == 0 ? "danger" : "warning")">
                                            @alert.CurrentStock
                                        </span>
                                    </div>
                                </div>
                            }
                        </div>
                        @if (Model.StockAlerts.Count() > 5)
                        {
                            <div class="text-center mt-3">
                                <a href="@Url.Action("Alerts", "Inventory")" class="btn btn-outline-primary btn-sm">
                                    View All @Model.StockAlerts.Count() Alerts
                                </a>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <p class="text-muted">No stock alerts at this time</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-history me-2"></i>
                            Recent Warehouse Activity
                        </h5>
                        <a href="@Url.Action("Movements", "Inventory")" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-external-link-alt me-1"></i>View All
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.RecentMovements.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Date/Time</th>
                                        <th>Item</th>
                                        <th>Movement Type</th>
                                        <th>Quantity</th>
                                        <th>Location</th>
                                        <th>Performed By</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var movement in Model.RecentMovements.Take(10))
                                    {
                                        <tr>
                                            <td>
                                                <small>
                                                    @movement.MovementDate.ToString("MM/dd/yyyy HH:mm")
                                                </small>
                                            </td>
                                            <td>
                                                <strong>@movement.InventoryItem?.Name</strong><br>
                                                <small class="text-muted">@movement.InventoryItem?.ItemCode</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-@(movement.MovementType == InventoryMovementType.StockIn ? "success" : movement.MovementType == InventoryMovementType.StockOut ? "primary" : "warning")">
                                                    @movement.MovementType
                                                </span>
                                            </td>
                                            <td>
                                                <strong>@movement.Quantity</strong>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(movement.ToLocation))
                                                {
                                                    <span>@movement.ToLocation</span>
                                                }
                                                else if (!string.IsNullOrEmpty(movement.FromLocation))
                                                {
                                                    <span>From: @movement.FromLocation</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(movement.PerformedByUser))
                                                {
                                                    <span>@movement.PerformedByUser</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">System</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No recent warehouse activity</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-refresh analytics every 30 seconds
            setInterval(function() {
                $.get('@Url.Action("GetWarehouseAnalytics")', function(data) {
                    if (data && !data.error) {
                        // Update metrics with new data
                        updateMetrics(data);
                    }
                });
            }, 30000);

            // Form submission with loading states
            $('form').on('submit', function() {
                var $btn = $(this).find('button[type="submit"]');
                $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Processing...');
            });
        });

        function updateMetrics(data) {
            // Update dashboard metrics with real-time data
            console.log('Analytics updated:', data);
        }
    </script>
}

@section Styles {
    <style>
        .border-left-primary {
            border-left: 4px solid var(--bs-primary) !important;
        }
        
        .card-body .fa-2x {
            opacity: 0.7;
        }
        
        .list-group-item:last-child {
            border-bottom: none;
        }
        
        .page-header {
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--bs-border-color);
        }
        
        .page-title {
            margin-bottom: 0.5rem;
            color: var(--bs-primary);
        }
    </style>
}
