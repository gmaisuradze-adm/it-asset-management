@model IEnumerable<HospitalAssetTracker.Models.AssetMovement>
@{
    ViewData["Title"] = "Asset History";
    var asset = ViewBag.Asset as HospitalAssetTracker.Models.Asset;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Asset Movement History</h1>
    <a asp-action="Details" asp-route-id="@asset.Id" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Back to Details
    </a>
</div>

<!-- Asset Info Header -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h5 class="mb-1">@asset.AssetTag - @asset.Brand @asset.Model</h5>
                <p class="text-muted mb-0">
                    Current Location: @(asset.Location?.FullLocation ?? "Unassigned") | 
                    Assigned To: @(asset.AssignedToUser?.FullName ?? "Unassigned")
                </p>
            </div>
            <div class="col-md-4 text-end">
                <span class="badge bg-@(asset.Status switch { 
                    HospitalAssetTracker.Models.AssetStatus.InUse => "success",
                    HospitalAssetTracker.Models.AssetStatus.Available => "primary", 
                    HospitalAssetTracker.Models.AssetStatus.UnderRepair => "warning",
                    HospitalAssetTracker.Models.AssetStatus.Decommissioned => "danger",
                    _ => "secondary" 
                }) fs-6">@asset.Status</span>
            </div>
        </div>
    </div>
</div>

<!-- Movement History -->
<div class="card">
    <div class="card-header">
        <h5><i class="bi bi-clock-history"></i> Complete Movement History</h5>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover" id="historyTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Date & Time</th>
                            <th>Movement Type</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Performed By</th>
                            <th>Reason</th>
                            <th>Notes</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var movement in Model.OrderByDescending(m => m.MovementDate))
                        {
                            <tr>
                                <td>
                                    <small>
                                        @movement.MovementDate.ToString("dd/MM/yyyy")<br>
                                        <span class="text-muted">@movement.MovementDate.ToString("HH:mm")</span>
                                    </small>
                                </td>
                                <td>
                                    <span class="badge bg-@(movement.MovementType switch {
                                        HospitalAssetTracker.Models.MovementType.LocationTransfer => "info",
                                        HospitalAssetTracker.Models.MovementType.PersonTransfer => "warning", 
                                        HospitalAssetTracker.Models.MovementType.Installation => "success",
                                        HospitalAssetTracker.Models.MovementType.Decommission => "danger",
                                        HospitalAssetTracker.Models.MovementType.Repair => "warning",
                                        HospitalAssetTracker.Models.MovementType.Return => "primary",
                                        _ => "secondary"
                                    })">
                                        @movement.MovementType
                                    </span>
                                </td>
                                <td>
                                    @if (movement.FromLocation != null)
                                    {
                                        <div><i class="bi bi-geo-alt text-info"></i> @movement.FromLocation.FullLocation</div>
                                    }
                                    @if (movement.FromUser != null)
                                    {
                                        <div><i class="bi bi-person text-warning"></i> @movement.FromUser.FullName</div>
                                    }
                                    @if (movement.FromLocation == null && movement.FromUser == null)
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    @if (movement.ToLocation != null)
                                    {
                                        <div><i class="bi bi-geo-alt text-info"></i> @movement.ToLocation.FullLocation</div>
                                    }
                                    @if (movement.ToUser != null)
                                    {
                                        <div><i class="bi bi-person text-warning"></i> @movement.ToUser.FullName</div>
                                    }
                                    @if (movement.ToLocation == null && movement.ToUser == null)
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    @if (movement.PerformedByUser != null)
                                    {
                                        <small>@movement.PerformedByUser.FullName</small>
                                    }
                                    else
                                    {
                                        <small class="text-muted">System</small>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(movement.Reason))
                                    {
                                        <small>@movement.Reason</small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(movement.Notes))
                                    {
                                        <small>@movement.Notes</small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            <!-- Summary Stats -->
            <div class="row mt-4">
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h6 class="text-muted">Total Movements</h6>
                            <h4 class="text-primary">@Model.Count()</h4>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h6 class="text-muted">Location Changes</h6>
                            <h4 class="text-info">@Model.Count(m => m.MovementType == HospitalAssetTracker.Models.MovementType.LocationTransfer)</h4>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h6 class="text-muted">Person Transfers</h6>
                            <h4 class="text-warning">@Model.Count(m => m.MovementType == HospitalAssetTracker.Models.MovementType.PersonTransfer)</h4>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h6 class="text-muted">Last Movement</h6>
                            <h6 class="text-success">
                                @if (Model.Any())
                                {
                                    @Model.OrderByDescending(m => m.MovementDate).First().MovementDate.ToString("dd/MM/yyyy")
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </h6>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-inbox display-4 text-muted"></i>
                <h5 class="mt-3 text-muted">No Movement History</h5>
                <p class="text-muted">This asset has no recorded movements yet.</p>
                
                @if (User.IsInRole("Admin") || User.IsInRole("IT Support") || User.IsInRole("Asset Manager"))
                {
                    <a asp-action="Move" asp-route-id="@asset.Id" class="btn btn-primary">
                        <i class="bi bi-arrow-right-square"></i> Create First Movement
                    </a>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#historyTable').DataTable({
                "order": [[ 0, "desc" ]],
                "pageLength": 25,
                "responsive": true,
                "columnDefs": [
                    { "orderable": false, "targets": [6] }
                ]
            });
        });
    </script>
}
