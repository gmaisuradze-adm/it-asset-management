@model List<HospitalAssetTracker.Models.MaintenanceAssetViewModel>
@{
    ViewData["Title"] = "Assets Requiring Maintenance";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="bi bi-wrench"></i> Assets Requiring Maintenance</h1>
    <div>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Assets
        </a>
    </div>
</div>

<!-- Summary Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-white bg-warning">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@Model.Count</h4>
                        <p class="card-text">Assets Needing Maintenance</p>
                    </div>
                    <div class="align-self-center">
                        <i class="bi bi-exclamation-triangle-fill fs-1"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-danger">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@Model.Count(vm => vm.NeverMaintained)</h4>
                        <p class="card-text">Never Maintained</p>
                    </div>
                    <div class="align-self-center">
                        <i class="bi bi-x-circle-fill fs-1"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-info">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@Model.Count(vm => vm.IsOverdue)</h4>
                        <p class="card-text">Overdue Maintenance</p>
                    </div>
                    <div class="align-self-center">
                        <i class="bi bi-clock-fill fs-1"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-secondary">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@Model.Select(vm => vm.Asset.Category).Distinct().Count()</h4>
                        <p class="card-text">Asset Categories</p>
                    </div>
                    <div class="align-self-center">
                        <i class="bi bi-collection-fill fs-1"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-success" role="alert">
        <i class="bi bi-check-circle-fill"></i>
        <strong>Great news!</strong> All assets are up to date with maintenance. No assets currently require maintenance.
    </div>
}
else
{
    <!-- Assets Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">Assets Requiring Maintenance</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="maintenanceTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Asset Tag</th>
                            <th>Category</th>
                            <th>Brand & Model</th>
                            <th>Location</th>
                            <th>Assigned To</th>
                            <th>Last Maintenance</th>
                            <th>Days Overdue</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var vm in Model)
                        {
                            <tr>
                                <td>
                                    <a asp-action="Details" asp-route-id="@vm.Asset.Id" class="text-decoration-none">
                                        <strong>@vm.Asset.AssetTag</strong>
                                    </a>
                                </td>
                                <td>
                                    <span class="badge bg-secondary">@vm.Asset.Category</span>
                                </td>
                                <td>
                                    <div>
                                        <strong>@vm.Asset.Brand</strong>
                                        @if (!string.IsNullOrEmpty(vm.Asset.Model))
                                        {
                                            <br><small class="text-muted">@vm.Asset.Model</small>
                                        }
                                    </div>
                                </td>
                                <td>
                                    @if (vm.Asset.Location != null)
                                    {
                                        <div>
                                            <i class="bi bi-geo-alt"></i> @vm.Asset.Location.Building
                                            @if (!string.IsNullOrEmpty(vm.Asset.Location.Floor))
                                            {
                                                <br><small class="text-muted">Floor @vm.Asset.Location.Floor</small>
                                            }
                                            @if (!string.IsNullOrEmpty(vm.Asset.Location.Room))
                                            {
                                                <br><small class="text-muted">Room @vm.Asset.Location.Room</small>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not assigned</span>
                                    }
                                </td>
                                <td>
                                    @if (vm.Asset.AssignedToUser != null)
                                    {
                                        <div>
                                            <i class="bi bi-person"></i> @vm.Asset.AssignedToUser.FirstName @vm.Asset.AssignedToUser.LastName
                                            @if (!string.IsNullOrEmpty(vm.Asset.AssignedToUser.Department))
                                            {
                                                <br><small class="text-muted">@vm.Asset.AssignedToUser.Department</small>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Unassigned</span>
                                    }
                                </td>
                                <td>
                                    @if (vm.LastMaintenanceDate.HasValue)
                                    {
                                        <div>
                                            @vm.LastMaintenanceDate.Value.ToString("MMM dd, yyyy")
                                        </div>
                                    }
                                    else if (vm.MaintenanceInProgress)
                                    {
                                        <span class="text-muted">In Progress</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Never Maintained</span>
                                    }
                                </td>
                                <td>
                                    @if (vm.IsOverdue)
                                    {
                                        var badgeClass = vm.DaysOverdue > 365 ? "bg-danger" : (vm.DaysOverdue > 180 ? "bg-warning text-dark" : "bg-info");
                                        <span class="badge @badgeClass">
                                            @vm.DaysOverdue days
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Up to date</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@vm.Asset.Id" class="btn btn-outline-info" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        @if (User.IsInRole("Admin") || User.IsInRole("IT Support"))
                                        {
                                            <button type="button" class="btn btn-outline-warning schedule-maintenance-btn" 
                                                    data-asset-id="@vm.Asset.Id" 
                                                    data-asset-tag="@vm.Asset.AssetTag" 
                                                    title="Schedule Maintenance">
                                                <i class="bi bi-calendar-plus"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-md-6">
                    <small class="text-muted">
                        Showing @Model.Count() assets requiring maintenance (90+ days since last maintenance)
                    </small>
                </div>
                <div class="col-md-6 text-end">
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="exportTable()">
                        <i class="bi bi-download"></i> Export
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Schedule Maintenance Modal -->
<div class="modal fade" id="scheduleMaintenanceModal" tabindex="-1" aria-labelledby="scheduleMaintenanceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="scheduleMaintenanceModalLabel">Schedule Maintenance</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="scheduleMaintenanceForm">
                <div class="modal-body">
                    <input type="hidden" id="maintenanceAssetId" name="AssetId">
                    <div class="mb-3">
                        <label for="maintenanceAssetTag" class="form-label">Asset</label>
                        <input type="text" class="form-control" id="maintenanceAssetTag" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="maintenanceType" class="form-label">Maintenance Type</label>
                        <select class="form-select" id="maintenanceType" name="MaintenanceType" required>
                            <option value="">Select maintenance type...</option>
                            <option value="PreventiveMaintenance">Preventive Maintenance</option>
                            <option value="Repair">Repair</option>
                            <option value="Upgrade">Upgrade</option>
                            <option value="Inspection">Inspection</option>
                            <option value="Calibration">Calibration</option>
                            <option value="Cleaning">Cleaning</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="maintenanceTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="maintenanceTitle" name="Title" required>
                    </div>
                    <div class="mb-3">
                        <label for="maintenanceDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="maintenanceDescription" name="Description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="scheduledDate" class="form-label">Scheduled Date</label>
                        <input type="date" class="form-control" id="scheduledDate" name="ScheduledDate" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Schedule Maintenance</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>

    <script>
        $(document).ready(function () {
            var table = $('#maintenanceTable').DataTable({
                responsive: true,
                pageLength: 10,
                order: [[1, 'asc']], // Sort by Asset Tag by default
                // columnDefs: [
                //     { orderable: false, targets: 0 } // Disable sorting on checkbox column if it existed
                // ]
            });

            // Handle individual schedule maintenance button click
            $('.schedule-maintenance-btn').on('click', function () {
                var assetId = $(this).data('asset-id');
                var assetTag = $(this).data('asset-tag');
                
                $('#maintenanceAssetId').val(assetId);
                $('#maintenanceAssetTag').val(assetTag);
                $('#maintenanceTitle').val('Routine Maintenance - ' + assetTag);
                $('#scheduledDate').val(new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]); // Default to 7 days from now
                
                $('#scheduleMaintenanceModal').modal('show');
            });

            // Schedule maintenance form submit
            $('#scheduleMaintenanceForm').submit(function(e) {
                e.preventDefault();
                
                var formData = $(this).serialize();
                
                $.ajax({
                    url: '@Url.Action("ScheduleMaintenance", "Maintenance")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            $('#scheduleMaintenanceModal').modal('hide');
                            showAlert('success', 'Maintenance scheduled successfully');
                            location.reload();
                        } else {
                            showAlert('danger', response.message || 'Error scheduling maintenance');
                        }
                    },
                    error: function() {
                        showAlert('danger', 'Error scheduling maintenance');
                    }
                });
            });
        });

        function exportTable() {
            $('#maintenanceTable').DataTable().button(0).trigger();
        }

        function showAlert(type, message) {
            var alertHtml = '<div class="alert alert-' + type + ' alert-dismissible fade show" role="alert">' +
                           '<i class="bi bi-' + (type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle') + '-fill"></i> ' +
                           message +
                           '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                           '</div>';
            
            $('body').prepend(alertHtml);
            
            setTimeout(function() {
                $('.alert').fadeOut();
            }, 5000);
        }
    </script>
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.2/css/buttons.bootstrap5.min.css">
    
    <style>
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
        
        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
        }
        
        .badge {
            font-size: 0.75em;
        }
        
        .table-responsive {
            border-radius: 0.375rem;
        }
        
        .dataTables_wrapper .dataTables_length,
        .dataTables_wrapper .dataTables_filter {
            margin-bottom: 1rem;
        }
        
        .dt-buttons {
            margin-bottom: 1rem;
        }
    </style>
}
