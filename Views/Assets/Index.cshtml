@model HospitalAssetTracker.Models.PagedResult<HospitalAssetTracker.Models.Asset>
@{
    ViewData["Title"] = "Assets";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>IT Assets</h1>
    @if (User.IsInRole("Admin") || User.IsInRole("IT Support") || User.IsInRole("Asset Manager"))
    {
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Add New Asset
        </a>
    }
</div>

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label for="searchTerm" class="form-label">Search Assets</label>
                <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                       value="@ViewBag.SearchTerm" placeholder="Asset tag, brand, model, serial number...">
            </div>
            <div class="col-md-2">
                <label for="category" class="form-label">Category</label>
                <select class="form-select" id="category" name="category">
                    <option value="">All Categories</option>
                    @foreach (var item in ViewBag.Categories as SelectList)
                    {
                        <option value="@item.Value" selected="@(item.Value == ViewBag.SelectedCategory?.ToString())">@item.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label for="status" class="form-label">Status</label>
                <select class="form-select" id="status" name="status">
                    <option value="">All Statuses</option>
                    @foreach (var item in ViewBag.Statuses as SelectList)
                    {
                        <option value="@item.Value" selected="@(item.Value == ViewBag.SelectedStatus?.ToString())">@item.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="locationId" class="form-label">Location</label>
                <select class="form-select" id="locationId" name="locationId">
                    <option value="">All Locations</option>
                    @foreach (var item in ViewBag.Locations as SelectList)
                    {
                        <option value="@item.Value" selected="@(item.Value == ViewBag.SelectedLocationId?.ToString())">@item.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-1 d-flex align-items-end">
                <button type="submit" class="btn btn-outline-primary w-100">
                    <i class="bi bi-search"></i> Search
                </button>
            </div>
            <div class="col-md-12 mt-2">
                <button type="button" class="btn btn-link p-0" onclick="showAdvancedSearch()">
                    <i class="bi bi-gear"></i> Advanced Search
                </button>
                <a href="@Url.Action("Index")" class="btn btn-link p-0 ms-2">
                    <i class="bi bi-x-circle"></i> Clear Filters
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Advanced Search Modal -->
<div class="modal fade" id="advancedSearchModal" tabindex="-1" aria-labelledby="advancedSearchModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="advancedSearchModalLabel">
                    <i class="bi bi-funnel"></i> Advanced Search
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="get" action="@Url.Action("Index")">
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Asset Tag Range</label>
                            <div class="input-group">
                                <input type="text" class="form-control" name="assetTagFrom" placeholder="From (e.g., DESK-001)">
                                <span class="input-group-text">to</span>
                                <input type="text" class="form-control" name="assetTagTo" placeholder="To (e.g., DESK-100)">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Purchase Price Range</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" class="form-control" name="priceFrom" placeholder="Min">
                                <span class="input-group-text">to</span>
                                <input type="number" class="form-control" name="priceTo" placeholder="Max">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Installation Date Range</label>
                            <div class="input-group">
                                <input type="date" class="form-control" name="installFrom">
                                <span class="input-group-text">to</span>
                                <input type="date" class="form-control" name="installTo">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Warranty Status</label>
                            <select class="form-select" name="warrantyStatus">
                                <option value="">All</option>
                                <option value="active">Active Warranty</option>
                                <option value="expired">Expired Warranty</option>
                                <option value="expiring">Expiring Soon (3 months)</option>
                                <option value="none">No Warranty</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Department</label>
                            <input type="text" class="form-control" name="department" placeholder="Department name">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Supplier</label>
                            <input type="text" class="form-control" name="supplier" placeholder="Supplier name">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-outline-warning" onclick="clearAdvancedSearch()">Clear</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search"></i> Search
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Quick Actions Panel (Hidden by default) -->
<div id="bulkActionsDiv" style="display: none;" class="alert alert-info">
    <div class="d-flex justify-content-between align-items-center">
        <span>
            <i class="bi bi-check-circle"></i> 
            <span id="selectedCount">0</span> asset(s) selected
        </span>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-sm btn-outline-success" onclick="executeBulkAction('export')">
                <i class="bi bi-download"></i> Export Selected
            </button>
            <button type="button" class="btn btn-sm btn-outline-warning" onclick="executeBulkAction('move')">
                <i class="bi bi-arrow-right"></i> Move
            </button>
            <button type="button" class="btn btn-sm btn-outline-primary" onclick="executeBulkAction('assign')">
                <i class="bi bi-person-plus"></i> Assign
            </button>
            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="executeBulkAction('status')">
                <i class="bi bi-gear"></i> Change Status
            </button>
        </div>
    </div>
</div>

<!-- Assets Table -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <span><i class="bi bi-table"></i> Assets (@Model.TotalCount total, showing @Model.StartIndex-@Model.EndIndex)</span>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-sm btn-outline-success" onclick="exportToExcel()">
                <i class="bi bi-file-earmark-excel"></i> Excel
            </button>
            <button type="button" class="btn btn-sm btn-outline-danger" onclick="exportToPdf()">
                <i class="bi bi-file-earmark-pdf"></i> PDF
            </button>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover" id="assetsTable">
                <thead class="table-dark">
                    <tr>
                        <th width="50">
                            <input class="form-check-input" type="checkbox" id="selectAllCheckbox" onchange="selectAllAssets(this)" title="Select All">
                        </th>
                        <th>Asset Tag</th>
                        <th>Category</th>
                        <th>Brand</th>
                        <th>Model</th>
                        <th>Status</th>
                        <th>Location</th>
                        <th>Assigned To</th>
                        <th>Department</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>
                                <input class="form-check-input" type="checkbox" name="selectedAssets" value="@item.Id" onchange="markAsSelected(this)">
                            </td>
                            <td>
                                <strong>@item.AssetTag</strong>
                            </td>
                            <td>
                                <span class="badge bg-secondary">@item.Category</span>
                            </td>
                            <td>@item.Brand</td>
                            <td>@item.Model</td>
                            <td>
                                @switch (item.Status)
                                {
                                    case HospitalAssetTracker.Models.AssetStatus.InUse:
                                        <span class="badge bg-success">In Use</span>
                                        break;
                                    case HospitalAssetTracker.Models.AssetStatus.Available:
                                        <span class="badge bg-primary">Available</span>
                                        break;
                                    case HospitalAssetTracker.Models.AssetStatus.UnderRepair:
                                        <span class="badge bg-warning">Under Repair</span>
                                        break;
                                    case HospitalAssetTracker.Models.AssetStatus.Decommissioned:
                                        <span class="badge bg-danger">Decommissioned</span>
                                        break;
                                    default:
                                        <span class="badge bg-secondary">@item.Status</span>
                                        break;
                                }
                            </td>
                            <td>@(item.Location?.FullLocation ?? "Unassigned")</td>
                            <td>@(item.AssignedToUser?.FullName ?? "Unassigned")</td>
                            <td>@(item.Department ?? "N/A")</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="View Details">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    @if (User.IsInRole("Admin") || User.IsInRole("IT Support") || User.IsInRole("Asset Manager"))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Move" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary" title="Move Asset">
                                            <i class="bi bi-arrow-right-square"></i>
                                        </a>
                                        <a asp-action="Clone" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="Clone Asset">
                                            <i class="bi bi-copy"></i>
                                        </a>
                                    }
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Assets pagination" class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        searchTerm = ViewBag.SearchTerm, 
                        category = ViewBag.SelectedCategory, 
                        status = ViewBag.SelectedStatus, 
                        locationId = ViewBag.SelectedLocationId,
                        page = Model.PageNumber - 1 
                    })">
                        <i class="bi bi-chevron-left"></i> Previous
                    </a>
                </li>
            }

            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        searchTerm = ViewBag.SearchTerm, 
                        category = ViewBag.SelectedCategory, 
                        status = ViewBag.SelectedStatus, 
                        locationId = ViewBag.SelectedLocationId,
                        page = i 
                    })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        searchTerm = ViewBag.SearchTerm, 
                        category = ViewBag.SelectedCategory, 
                        status = ViewBag.SelectedStatus, 
                        locationId = ViewBag.SelectedLocationId,
                        page = Model.PageNumber + 1 
                    })">
                        Next <i class="bi bi-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
        
        <div class="text-center text-muted small">
            Page @Model.PageNumber of @Model.TotalPages (@Model.TotalCount total items)
        </div>
    </nav>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#assetsTable').DataTable({
                responsive: true,
                pageLength: 25,
                order: [[0, 'asc']],
                columnDefs: [
                    { orderable: false, targets: -1 }
                ]
            });
        });

        function exportToExcel() {
            const params = new URLSearchParams(window.location.search);
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("ExportAssetsExcel", "Reports")';
            
            params.forEach((value, key) => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = key;
                input.value = value;
                form.appendChild(input);
            });

            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                form.appendChild(token.cloneNode());
            }

            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }

        function exportToPdf() {
            const params = new URLSearchParams(window.location.search);
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("ExportAssetsPdf", "Reports")';
            
            params.forEach((value, key) => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = key;
                input.value = value;
                form.appendChild(input);
            });

            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                form.appendChild(token.cloneNode());
            }

            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }

        function showAdvancedSearch() {
            $('#advancedSearchModal').modal('show');
        }

        function clearAdvancedSearch() {
            $('#advancedSearchModal input').val('');
            $('#advancedSearchModal select').val('');
        }

        // Quick Actions
        function markAsSelected(checkbox) {
            const row = checkbox.closest('tr');
            if (checkbox.checked) {
                row.classList.add('table-primary');
            } else {
                row.classList.remove('table-primary');
            }
            updateBulkActionsVisibility();
        }

        function selectAllAssets(selectAll) {
            const checkboxes = document.querySelectorAll('input[name="selectedAssets"]');
            checkboxes.forEach(cb => {
                cb.checked = selectAll.checked;
                markAsSelected(cb);
            });
        }

        function updateBulkActionsVisibility() {
            const selectedCount = document.querySelectorAll('input[name="selectedAssets"]:checked').length;
            const bulkActionsDiv = document.getElementById('bulkActionsDiv');
            
            if (selectedCount > 0) {
                bulkActionsDiv.style.display = 'block';
                document.getElementById('selectedCount').textContent = selectedCount;
            } else {
                bulkActionsDiv.style.display = 'none';
            }
        }

        function executeBulkAction(action) {
            const selectedAssets = Array.from(document.querySelectorAll('input[name="selectedAssets"]:checked')).map(cb => cb.value);
            
            if (selectedAssets.length === 0) {
                alert('Please select at least one asset.');
                return;
            }

            if (confirm(`Are you sure you want to ${action} ${selectedAssets.length} asset(s)?`)) {
                // Redirect to bulk actions page with selected assets
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("BulkActions", "Assets")';
                
                selectedAssets.forEach(id => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'selectedAssets';
                    input.value = id;
                    form.appendChild(input);
                });

                const actionInput = document.createElement('input');
                actionInput.type = 'hidden';
                actionInput.name = 'action';
                actionInput.value = action;
                form.appendChild(actionInput);

                const token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    form.appendChild(token.cloneNode());
                }

                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}
