@model IEnumerable<HospitalAssetTracker.Models.Asset>
@using HospitalAssetTracker.Models
@{
    ViewData["Title"] = "Expired Warranty Assets";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="bi bi-calendar-x"></i> Expired Warranty Assets</h1>
</div>

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <span><i class="bi bi-table"></i> Assets with Expired Warranties (@Model.Count())</span>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-sm btn-outline-success" onclick="exportToExpiredWarrantyExcel()">
                <i class="bi bi-file-earmark-excel"></i> Excel
            </button>
            <button type="button" class="btn btn-sm btn-outline-danger" onclick="exportToExpiredWarrantyPdf()">
                <i class="bi bi-file-earmark-pdf"></i> PDF
            </button>
        </div>
    </div>
    <div class="card-body">
        @if (!Model.Any())
        {
            <div class="alert alert-info" role="alert">
                No assets with expired warranties found.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="expiredWarrantyAssetsTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Asset Tag</th>
                            <th>Category</th>
                            <th>Brand</th>
                            <th>Model</th>
                            <th>Serial Number</th>
                            <th>Status</th>
                            <th>Location</th>
                            <th>Warranty Expiry Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <strong><a asp-action="Details" asp-route-id="@item.Id">@item.AssetTag</a></strong>
                                </td>
                                <td><span class="badge bg-secondary">@item.Category</span></td>
                                <td>@item.Brand</td>
                                <td>@item.Model</td>
                                <td>@item.SerialNumber</td>
                                <td>
                                    @switch (item.Status)
                                    {
                                        case AssetStatus.InUse:
                                            <span class="badge bg-success">In Use</span>
                                            break;
                                        case AssetStatus.Available:
                                            <span class="badge bg-primary">Available</span>
                                            break;
                                        case AssetStatus.UnderRepair:
                                            <span class="badge bg-warning text-dark">Under Repair</span>
                                            break;
                                        case AssetStatus.Maintenance:
                                            <span class="badge bg-info text-dark">Maintenance</span>
                                            break;
                                        case AssetStatus.Decommissioned:
                                            <span class="badge bg-danger">Decommissioned</span>
                                            break;
                                        case AssetStatus.WriteOff:
                                            <span class="badge bg-dark">Written Off</span>
                                            break;
                                        case AssetStatus.Lost:
                                            <span class="badge bg-light text-dark border">Lost</span>
                                            break;
                                        case AssetStatus.Stolen:
                                            <span class="badge bg-purple">Stolen</span>
                                            break;
                                        default:
                                            <span class="badge bg-light text-dark">@item.Status</span>
                                            break;
                                    }
                                </td>
                                <td>@(item.Location?.FullLocation ?? "N/A")</td>
                                <td>
                                    @if (item.WarrantyExpiry.HasValue)
                                    {
                                        @item.WarrantyExpiry.Value.ToString("yyyy-MM-dd")
                                        @if (item.WarrantyExpiry.Value < DateTime.UtcNow)
                                        {
                                            <span class="badge bg-danger ms-1">Expired</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark ms-1">Expiring Soon</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        @if (User.IsInRole("Admin") || User.IsInRole("IT Support") || User.IsInRole("Asset Manager"))
                                        {
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#expiredWarrantyAssetsTable').DataTable({
                responsive: true,
                pageLength: 25,
                order: [[7, 'asc']], // Default sort by Warranty Expiry Date
                columnDefs: [
                    { orderable: false, targets: -1 } // Disable sorting on Actions column
                ]
            });
        });

        function exportToExpiredWarrantyExcel() {
            // Similar to exportToExcel in Index.cshtml, but targets a different action if needed
            // For now, let's assume a generic export or reuse existing if applicable
            // This might require a new endpoint or modification of the existing one
            // For simplicity, we'll log a message, actual implementation might differ
            console.log("Exporting expired warranty assets to Excel...");
            const form = document.createElement('form');
            form.method = 'POST';
            // TODO: Update to a specific action for expired warranty Excel export if it exists
            // For now, using a placeholder or a generic one if available
            form.action = '@Url.Action("ExportExpiredWarrantyAssetsExcel", "Reports")'; 

            // Add anti-forgery token if forms use it
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                 const clonedToken = token.cloneNode(true);
                 form.appendChild(clonedToken);
            }
            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }

        function exportToExpiredWarrantyPdf() {
            console.log("Exporting expired warranty assets to PDF...");
            const form = document.createElement('form');
            form.method = 'POST';
            // TODO: Update to a specific action for expired warranty PDF export
            form.action = '@Url.Action("ExportExpiredWarrantyAssetsPdf", "Reports")';
            
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                 const clonedToken = token.cloneNode(true);
                 form.appendChild(clonedToken);
            }
            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }
    </script>
}
