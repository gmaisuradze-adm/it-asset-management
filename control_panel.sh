#!/bin/bash

# ­ЪЈЦ Hospital IT Asset Tracker - рЃЏрЃЌрЃљрЃЋрЃљрЃарЃў рЃЎрЃЮрЃюрЃбрЃарЃЮрЃџрЃўрЃА рЃърЃљрЃюрЃћрЃџрЃў
# Version: 1.0.0
# Created: 2025-06-18

PROJECT_DIR="/home/gadmin/it_system_new_gen"

# рЃцрЃћрЃарЃћрЃЉрЃўрЃА рЃЊрЃљрЃДрЃћрЃюрЃћрЃЉрЃљ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# рЃџрЃЮрЃњрЃЮрЃА рЃЕрЃЋрЃћрЃюрЃћрЃЉрЃљ
show_logo() {
    echo -e "${BLUE}"
    echo "  РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ"
    echo "  РЋЉ                                                          РЋЉ"
    echo "  РЋЉ    ­ЪЈЦ HOSPITAL IT ASSET TRACKER - рЃЎрЃЮрЃюрЃбрЃарЃЮрЃџрЃўрЃА рЃърЃљрЃюрЃћрЃџрЃў      РЋЉ"
    echo "  РЋЉ                                                          РЋЉ"
    echo "  РЋЉ    ­ЪЊі рЃърЃарЃЮрЃћрЃЦрЃбрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ - рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃљ - рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃў       РЋЉ"
    echo "  РЋЉ                                                          РЋЉ"
    echo "  РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ"
    echo -e "${NC}"
    echo ""
}

# рЃАрЃгрЃарЃљрЃцрЃў рЃАрЃбрЃљрЃбрЃБрЃАрЃў
show_quick_status() {
    echo -e "${CYAN}­ЪЊІ рЃАрЃгрЃарЃљрЃцрЃў рЃЏрЃЊрЃњрЃЮрЃЏрЃљрЃарЃћрЃЮрЃЉрЃљ:${NC}"
    echo "----------------------------------------"
    
    # рЃЋрЃћрЃарЃАрЃўрЃљ
    if [ -f "$PROJECT_DIR/version.json" ]; then
        VERSION=$(cat "$PROJECT_DIR/version.json" | grep -o '"version": *"[^"]*"' | cut -d'"' -f4)
        echo -e "${GREEN}­ЪЊд рЃЋрЃћрЃарЃАрЃўрЃљ: v$VERSION${NC}"
    else
        echo -e "${YELLOW}­ЪЊд рЃЋрЃћрЃарЃАрЃўрЃљ: рЃњрЃљрЃюрЃБрЃАрЃљрЃќрЃдрЃЋрЃарЃћрЃџрЃў${NC}"
    fi
    
    # рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃАрЃбрЃљрЃбрЃБрЃАрЃў
    if pgrep -f "dotnet.*HospitalAssetTracker" > /dev/null; then
        echo -e "${GREEN}­Ъџђ рЃАрЃћрЃарЃЋрЃўрЃАрЃў: рЃњрЃљрЃерЃЋрЃћрЃЉрЃБрЃџрЃўрЃљ${NC}"
    else
        echo -e "${RED}­Ъџђ рЃАрЃћрЃарЃЋрЃўрЃАрЃў: рЃњрЃљрЃЕрЃћрЃарЃћрЃЉрЃБрЃџрЃўрЃљ${NC}"
    fi
    
    # рЃЉрЃЮрЃџрЃЮ рЃЉрЃћрЃЦрЃљрЃърЃў
    if ls /home/gadmin/backup/*.tar.gz 1> /dev/null 2>&1; then
        LAST_BACKUP=$(ls -t /home/gadmin/backup/*.tar.gz | head -1)
        BACKUP_DATE=$(stat -c %y "$LAST_BACKUP" | cut -d' ' -f1)
        echo -e "${GREEN}­ЪњЙ рЃЉрЃЮрЃџрЃЮ рЃЉрЃћрЃЦрЃљрЃърЃў: $BACKUP_DATE${NC}"
    else
        echo -e "${YELLOW}­ЪњЙ рЃЉрЃћрЃЦрЃљрЃърЃў: рЃљрЃа рЃљрЃарЃАрЃћрЃЉрЃЮрЃЉрЃА${NC}"
    fi
    
    echo ""
}

# рЃЏрЃћрЃюрЃўрЃБрЃА рЃЕрЃЋрЃћрЃюрЃћрЃЉрЃљ
show_menu() {
    echo -e "${PURPLE}­Ъј» рЃЏрЃЌрЃљрЃЋрЃљрЃарЃў рЃЏрЃћрЃюрЃўрЃБ:${NC}"
    echo "----------------------------------------"
    echo "1. ­ЪДф рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃў рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃљ"
    echo "2. ­ЪЊі рЃДрЃЮрЃЋрЃћрЃџрЃЊрЃдрЃўрЃБрЃарЃў рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃў"
    echo "3. ­ЪЊѕ рЃЋрЃћрЃарЃАрЃўрЃћрЃЉрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ"
    echo "4. ­ЪњЙ рЃЉрЃћрЃЦрЃљрЃърЃўрЃА рЃерЃћрЃЦрЃЏрЃюрЃљ"
    echo "5. ­Ъџђ рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ"
    echo "6. ­ЪЊІ рЃџрЃЮрЃњрЃћрЃЉрЃўрЃА рЃюрЃљрЃ«рЃЋрЃљ"
    echo "7. ­ЪћД рЃърЃарЃЮрЃћрЃЦрЃбрЃўрЃА Build & Run"
    echo "8. ­ЪЊі рЃЊрЃћрЃбрЃљрЃџрЃБрЃарЃў рЃАрЃбрЃљрЃбрЃБрЃАрЃў"
    echo "9. ­Ъєў рЃЊрЃљрЃ«рЃЏрЃљрЃарЃћрЃЉрЃљ"
    echo "0. ­Ъџф рЃњрЃљрЃАрЃЋрЃџрЃљ"
    echo ""
}

# рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃў рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃљ
run_automated_test() {
    echo -e "${BLUE}­ЪДф рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃў рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ...${NC}"
    echo "======================================"
    
    if [ -f "$PROJECT_DIR/automated_test.sh" ]; then
        "$PROJECT_DIR/automated_test.sh"
    else
        echo -e "${RED}РЮї рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃў рЃбрЃћрЃАрЃбрЃўрЃА рЃАрЃЦрЃарЃўрЃърЃбрЃў рЃЋрЃћрЃа рЃЋрЃўрЃърЃЮрЃЋрЃюрЃћ${NC}"
    fi
    
    echo ""
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# рЃДрЃЮрЃЋрЃћрЃџрЃЊрЃдрЃўрЃБрЃарЃў рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃў
run_daily_monitoring() {
    echo -e "${BLUE}­ЪЊі рЃДрЃЮрЃЋрЃћрЃџрЃЊрЃдрЃўрЃБрЃарЃў рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ...${NC}"
    echo "======================================"
    
    if [ -f "$PROJECT_DIR/daily_monitoring.sh" ]; then
        "$PROJECT_DIR/daily_monitoring.sh"
    else
        echo -e "${RED}РЮї рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃўрЃА рЃАрЃЦрЃарЃўрЃърЃбрЃў рЃЋрЃћрЃа рЃЋрЃўрЃърЃЮрЃЋрЃюрЃћ${NC}"
    fi
    
    echo ""
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# рЃЋрЃћрЃарЃАрЃўрЃћрЃЉрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ
manage_versions() {
    echo -e "${BLUE}­ЪЊѕ рЃЋрЃћрЃарЃАрЃўрЃћрЃЉрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ${NC}"
    echo "======================================"
    
    if [ -f "$PROJECT_DIR/version_control.sh" ]; then
        echo "1. ­ЪЊі рЃЏрЃўрЃЏрЃЊрЃўрЃюрЃљрЃарЃћ рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃЕрЃЋрЃћрЃюрЃћрЃЉрЃљ"
        echo "2. ­ЪћД Patch рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљ"
        echo "3. РџА Minor рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљ"
        echo "4. ­Ъџђ Major рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљ"
        echo "5. ­ЪћЎ рЃБрЃЎрЃљрЃю рЃЊрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃљ"
        echo ""
        
        read -p "рЃљрЃўрЃарЃЕрЃўрЃћрЃЌ рЃЮрЃцрЃфрЃўрЃљ (1-5): " version_choice
        
        case $version_choice in
            1)
                "$PROJECT_DIR/version_control.sh" show
                ;;
            2)
                read -p "Patch рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃљрЃдрЃгрЃћрЃарЃљ: " description
                "$PROJECT_DIR/version_control.sh" patch "$description"
                ;;
            3)
                read -p "Minor рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃљрЃдрЃгрЃћрЃарЃљ: " description
                "$PROJECT_DIR/version_control.sh" minor "$description"
                ;;
            4)
                read -p "Major рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃљрЃдрЃгрЃћрЃарЃљ: " description
                "$PROJECT_DIR/version_control.sh" major "$description"
                ;;
            5)
                return
                ;;
            *)
                echo -e "${RED}РЮї рЃљрЃарЃљрЃАрЃгрЃЮрЃарЃў рЃљрЃарЃЕрЃћрЃЋрЃљрЃюрЃў${NC}"
                ;;
        esac
    else
        echo -e "${RED}РЮї рЃЋрЃћрЃарЃАрЃўрЃћрЃЉрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃўрЃА рЃАрЃЦрЃарЃўрЃърЃбрЃў рЃЋрЃћрЃа рЃЋрЃўрЃърЃЮрЃЋрЃюрЃћ${NC}"
    fi
    
    echo ""
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# рЃЉрЃћрЃЦрЃљрЃърЃўрЃА рЃерЃћрЃЦрЃЏрЃюрЃљ
create_backup() {
    echo -e "${BLUE}­ЪњЙ рЃЉрЃћрЃЦрЃљрЃърЃўрЃА рЃерЃћрЃЦрЃЏрЃюрЃљ...${NC}"
    echo "======================================"
    
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_DIR="/home/gadmin/backup"
    BACKUP_FILE="$BACKUP_DIR/manual_backup_$TIMESTAMP.tar.gz"
    
    mkdir -p "$BACKUP_DIR"
    
    echo "­ЪЊд рЃЉрЃћрЃЦрЃљрЃърЃўрЃА рЃерЃћрЃЦрЃЏрЃюрЃљ рЃЏрЃўрЃЏрЃЊрЃўрЃюрЃљрЃарЃћрЃЮрЃЉрЃА..."
    
    if tar -czf "$BACKUP_FILE" "$PROJECT_DIR" 2>/dev/null; then
        echo -e "${GREEN}РюЁ рЃЉрЃћрЃЦрЃљрЃърЃў рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌ рЃерЃћрЃўрЃЦрЃЏрЃюрЃљ${NC}"
        echo "­ЪЊЂ рЃцрЃљрЃўрЃџрЃў: $BACKUP_FILE"
        
        # рЃЉрЃћрЃЦрЃљрЃърЃўрЃА рЃќрЃЮрЃЏрЃљ
        BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
        echo "­ЪЊі рЃќрЃЮрЃЏрЃљ: $BACKUP_SIZE"
    else
        echo -e "${RED}РЮї рЃЉрЃћрЃЦрЃљрЃърЃўрЃА рЃерЃћрЃЦрЃЏрЃюрЃўрЃА рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ${NC}"
    fi
    
    echo ""
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ
manage_service() {
    echo -e "${BLUE}­Ъџђ рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ${NC}"
    echo "======================================"
    
    if pgrep -f "dotnet.*HospitalAssetTracker" > /dev/null; then
        echo -e "${GREEN}РюЁ рЃАрЃћрЃарЃЋрЃўрЃАрЃў рЃљрЃЏрЃЪрЃљрЃЏрЃљрЃЊ рЃњрЃљрЃерЃЋрЃћрЃЉрЃБрЃџрЃўрЃљ${NC}"
        echo ""
        echo "1. ­ЪЏЉ рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃЕрЃћрЃарЃћрЃЉрЃљ"
        echo "2. ­Ъћё рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃ«рЃћрЃџрЃљрЃ«рЃљрЃџрЃў рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ"
        echo "3. ­ЪћЎ рЃБрЃЎрЃљрЃю рЃЊрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃљ"
        
        read -p "рЃљрЃўрЃарЃЕрЃўрЃћрЃЌ рЃЮрЃцрЃфрЃўрЃљ (1-3): " service_choice
        
        case $service_choice in
            1)
                echo "­ЪЏЉ рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃЕрЃћрЃарЃћрЃЉрЃљ..."
                pkill -f "dotnet.*HospitalAssetTracker"
                sleep 2
                if ! pgrep -f "dotnet.*HospitalAssetTracker" > /dev/null; then
                    echo -e "${GREEN}РюЁ рЃАрЃћрЃарЃЋрЃўрЃАрЃў рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌ рЃњрЃљрЃЕрЃћрЃарЃЊрЃљ${NC}"
                else
                    echo -e "${RED}РЮї рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃЕрЃћрЃарЃћрЃЉрЃўрЃА рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ${NC}"
                fi
                ;;
            2)
                echo "­Ъћё рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃ«рЃћрЃџрЃљрЃ«рЃљрЃџрЃў рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ..."
                pkill -f "dotnet.*HospitalAssetTracker"
                sleep 2
                cd "$PROJECT_DIR"
                nohup dotnet run > /dev/null 2>&1 &
                sleep 3
                if pgrep -f "dotnet.*HospitalAssetTracker" > /dev/null; then
                    echo -e "${GREEN}РюЁ рЃАрЃћрЃарЃЋрЃўрЃАрЃў рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌ рЃ«рЃћрЃџрЃљрЃ«рЃџрЃљ рЃњрЃљрЃћрЃерЃЋрЃљ${NC}"
                else
                    echo -e "${RED}РЮї рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃўрЃА рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ${NC}"
                fi
                ;;
            3)
                return
                ;;
        esac
    else
        echo -e "${RED}РЮї рЃАрЃћрЃарЃЋрЃўрЃАрЃў рЃљрЃЏрЃЪрЃљрЃЏрЃљрЃЊ рЃњрЃљрЃЕрЃћрЃарЃћрЃЉрЃБрЃџрЃўрЃљ${NC}"
        echo ""
        echo "1. ­Ъџђ рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ"
        echo "2. ­ЪћЎ рЃБрЃЎрЃљрЃю рЃЊрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃљ"
        
        read -p "рЃљрЃўрЃарЃЕрЃўрЃћрЃЌ рЃЮрЃцрЃфрЃўрЃљ (1-2): " service_choice
        
        case $service_choice in
            1)
                echo "­Ъџђ рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ..."
                cd "$PROJECT_DIR"
                nohup dotnet run > /dev/null 2>&1 &
                sleep 3
                if pgrep -f "dotnet.*HospitalAssetTracker" > /dev/null; then
                    echo -e "${GREEN}РюЁ рЃАрЃћрЃарЃЋрЃўрЃАрЃў рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌ рЃњрЃљрЃћрЃерЃЋрЃљ${NC}"
                    echo "­Ъїљ рЃ«рЃћрЃџрЃЏрЃўрЃАрЃљрЃгрЃЋрЃЊрЃЮрЃЏрЃўрЃљ: http://localhost:5001"
                else
                    echo -e "${RED}РЮї рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃўрЃА рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ${NC}"
                fi
                ;;
            2)
                return
                ;;
        esac
    fi
    
    echo ""
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# рЃџрЃЮрЃњрЃћрЃЉрЃўрЃА рЃюрЃљрЃ«рЃЋрЃљ
view_logs() {
    echo -e "${BLUE}­ЪЊІ рЃџрЃЮрЃњрЃћрЃЉрЃўрЃА рЃюрЃљрЃ«рЃЋрЃљ${NC}"
    echo "======================================"
    
    echo "1. ­ЪДф рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃўрЃА рЃџрЃЮрЃњрЃћрЃЉрЃў"
    echo "2. ­ЪЊі рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃўрЃА рЃџрЃЮрЃњрЃћрЃЉрЃў"
    echo "3. ­Ъће Build рЃџрЃЮрЃњрЃћрЃЉрЃў"
    echo "4. ­ЪЊ▒ Application рЃџрЃЮрЃњрЃћрЃЉрЃў"
    echo "5. ­ЪћЎ рЃБрЃЎрЃљрЃю рЃЊрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃљ"
    
    read -p "рЃљрЃўрЃарЃЕрЃўрЃћрЃЌ рЃЮрЃцрЃфрЃўрЃљ (1-5): " log_choice
    
    case $log_choice in
        1)
            echo "­ЪДф рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃўрЃА рЃџрЃЮрЃњрЃћрЃЉрЃў:"
            if ls "$PROJECT_DIR/logs/test/"*.txt 1> /dev/null 2>&1; then
                echo "­ЪЊё рЃЉрЃЮрЃџрЃЮ рЃбрЃћрЃАрЃбрЃўрЃА рЃџрЃЮрЃњрЃў:"
                tail -20 "$(ls -t "$PROJECT_DIR/logs/test/"*.txt | head -1)"
            else
                echo "рЃџрЃЮрЃњрЃћрЃЉрЃў рЃЋрЃћрЃа рЃЋрЃўрЃърЃЮрЃЋрЃюрЃћ"
            fi
            ;;
        2)
            echo "­ЪЊі рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃўрЃА рЃџрЃЮрЃњрЃћрЃЉрЃў:"
            if ls "$PROJECT_DIR/logs/monitoring/"*.json 1> /dev/null 2>&1; then
                echo "­ЪЊё рЃЉрЃЮрЃџрЃЮ рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃўрЃА рЃарЃћрЃърЃЮрЃарЃбрЃў:"
                cat "$(ls -t "$PROJECT_DIR/logs/monitoring/"*.json | head -1)" | jq '.' 2>/dev/null || cat "$(ls -t "$PROJECT_DIR/logs/monitoring/"*.json | head -1)"
            else
                echo "рЃџрЃЮрЃњрЃћрЃЉрЃў рЃЋрЃћрЃа рЃЋрЃўрЃърЃЮрЃЋрЃюрЃћ"
            fi
            ;;
        3)
            echo "­Ъће Build рЃџрЃЮрЃњрЃћрЃЉрЃў:"
            if ls "$PROJECT_DIR/logs/test/build_"*.log 1> /dev/null 2>&1; then
                tail -20 "$(ls -t "$PROJECT_DIR/logs/test/build_"*.log | head -1)"
            else
                echo "рЃџрЃЮрЃњрЃћрЃЉрЃў рЃЋрЃћрЃа рЃЋрЃўрЃърЃЮрЃЋрЃюрЃћ"
            fi
            ;;
        4)
            echo "­ЪЊ▒ Application рЃџрЃЮрЃњрЃћрЃЉрЃў:"
            journalctl --since "today" | grep -i "hospitalassettracker" | tail -10
            ;;
        5)
            return
            ;;
    esac
    
    echo ""
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# Build & Run
build_and_run() {
    echo -e "${BLUE}­ЪћД рЃърЃарЃЮрЃћрЃЦрЃбрЃўрЃА Build & Run${NC}"
    echo "======================================"
    
    cd "$PROJECT_DIR"
    
    echo "­Ъће Build-рЃўрЃА рЃерЃћрЃАрЃарЃБрЃџрЃћрЃЉрЃљ..."
    if dotnet build; then
        echo -e "${GREEN}РюЁ Build рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃБрЃџрЃў${NC}"
        echo ""
        echo "­Ъџђ рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ..."
        
        # рЃФрЃЋрЃћрЃџрЃў рЃърЃарЃЮрЃфрЃћрЃАрЃўрЃА рЃњрЃљрЃЕрЃћрЃарЃћрЃЉрЃљ
        pkill -f "dotnet.*HospitalAssetTracker" 2>/dev/null
        sleep 2
        
        # рЃљрЃ«рЃљрЃџрЃў рЃърЃарЃЮрЃфрЃћрЃАрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ
        dotnet run &
        sleep 3
        
        if pgrep -f "dotnet.*HospitalAssetTracker" > /dev/null; then
            echo -e "${GREEN}РюЁ рЃАрЃћрЃарЃЋрЃўрЃАрЃў рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌ рЃњрЃљрЃћрЃерЃЋрЃљ${NC}"
            echo "­Ъїљ рЃ«рЃћрЃџрЃЏрЃўрЃАрЃљрЃгрЃЋрЃЊрЃЮрЃЏрЃўрЃљ:"
            echo "   - http://localhost:5001"
            echo "   - http://localhost:5002"
            echo "   - http://localhost:5003"
        else
            echo -e "${RED}РЮї рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃўрЃА рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ${NC}"
        fi
    else
        echo -e "${RED}РЮї Build-рЃўрЃА рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ${NC}"
    fi
    
    echo ""
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# рЃЊрЃћрЃбрЃљрЃџрЃБрЃарЃў рЃАрЃбрЃљрЃбрЃБрЃАрЃў
detailed_status() {
    echo -e "${BLUE}­ЪЊі рЃЊрЃћрЃбрЃљрЃџрЃБрЃарЃў рЃАрЃбрЃљрЃбрЃБрЃАрЃў${NC}"
    echo "======================================"
    
    # рЃърЃарЃЮрЃћрЃЦрЃбрЃўрЃА рЃўрЃюрЃцрЃЮрЃарЃЏрЃљрЃфрЃўрЃљ
    echo -e "${CYAN}­ЪЊд рЃърЃарЃЮрЃћрЃЦрЃбрЃўрЃА рЃўрЃюрЃцрЃЮрЃарЃЏрЃљрЃфрЃўрЃљ:${NC}"
    echo "  ­ЪЊЂ рЃЊрЃўрЃарЃћрЃЦрЃбрЃЮрЃарЃўрЃљ: $PROJECT_DIR"
    if [ -f "$PROJECT_DIR/version.json" ]; then
        VERSION=$(cat "$PROJECT_DIR/version.json" | grep -o '"version": *"[^"]*"' | cut -d'"' -f4)
        echo "  ­ЪЊд рЃЋрЃћрЃарЃАрЃўрЃљ: v$VERSION"
    fi
    echo ""
    
    # рЃцрЃљрЃўрЃџрЃћрЃЉрЃўрЃА рЃарЃљрЃЮрЃЊрЃћрЃюрЃЮрЃЉрЃљ
    echo -e "${CYAN}­ЪЊё рЃцрЃљрЃўрЃџрЃћрЃЉрЃўрЃА рЃАрЃбрЃљрЃбрЃўрЃАрЃбрЃўрЃЎрЃљ:${NC}"
    echo "  ­ЪЊІ .cs рЃцрЃљрЃўрЃџрЃћрЃЉрЃў: $(find "$PROJECT_DIR" -name "*.cs" | wc -l)"
    echo "  ­Ъїљ .cshtml рЃцрЃљрЃўрЃџрЃћрЃЉрЃў: $(find "$PROJECT_DIR" -name "*.cshtml" | wc -l)"
    echo "  ­ЪЊё рЃ»рЃљрЃЏрЃБрЃарЃў рЃцрЃљрЃўрЃџрЃћрЃЉрЃў: $(find "$PROJECT_DIR" -type f | wc -l)"
    echo ""
    
    # рЃЉрЃћрЃЦрЃљрЃърЃћрЃЉрЃўрЃА рЃўрЃюрЃцрЃЮрЃарЃЏрЃљрЃфрЃўрЃљ
    echo -e "${CYAN}­ЪњЙ рЃЉрЃћрЃЦрЃљрЃърЃћрЃЉрЃўрЃА рЃўрЃюрЃцрЃЮрЃарЃЏрЃљрЃфрЃўрЃљ:${NC}"
    BACKUP_COUNT=$(ls -1 /home/gadmin/backup/*.tar.gz 2>/dev/null | wc -l)
    echo "  ­ЪЊі рЃЉрЃћрЃЦрЃљрЃърЃћрЃЉрЃўрЃА рЃарЃљрЃЮрЃЊрЃћрЃюрЃЮрЃЉрЃљ: $BACKUP_COUNT"
    if [ $BACKUP_COUNT -gt 0 ]; then
        TOTAL_BACKUP_SIZE=$(du -sh /home/gadmin/backup/ | cut -f1)
        echo "  ­ЪЊд рЃ»рЃљрЃЏрЃБрЃарЃў рЃќрЃЮрЃЏрЃљ: $TOTAL_BACKUP_SIZE"
    fi
    echo ""
    
    # рЃАрЃўрЃАрЃбрЃћрЃЏрЃўрЃА рЃарЃћрЃАрЃБрЃарЃАрЃћрЃЉрЃў
    echo -e "${CYAN}­ЪќЦ№ИЈ  рЃАрЃўрЃАрЃбрЃћрЃЏрЃўрЃА рЃарЃћрЃАрЃБрЃарЃАрЃћрЃЉрЃў:${NC}"
    echo "  ­Ъњ╗ CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}')"
    echo "  ­ЪДа RAM: $(free -h | grep Mem | awk '{print $3 "/" $2}')"
    echo "  ­ЪњЙ Disk: $(df -h / | awk 'NR==2 {print $3 "/" $2 " (" $5 ")"}')"
    
    echo ""
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# рЃЊрЃљрЃ«рЃЏрЃљрЃарЃћрЃЉрЃљ
show_help() {
    echo -e "${BLUE}­Ъєў рЃЊрЃљрЃ«рЃЏрЃљрЃарЃћрЃЉрЃљ${NC}"
    echo "======================================"
    echo ""
    echo -e "${CYAN}­Ъј» рЃљрЃЏ рЃЎрЃЮрЃюрЃбрЃарЃЮрЃџрЃўрЃА рЃърЃљрЃюрЃћрЃџрЃўрЃА рЃерЃћрЃАрЃљрЃФрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃћрЃЉрЃў:${NC}"
    echo ""
    echo "1. ­ЪДф рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃў рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃљ - рЃАрЃўрЃАрЃбрЃћрЃЏрЃўрЃА рЃ»рЃљрЃюрЃЏрЃарЃЌрЃћрЃџрЃЮрЃЉрЃўрЃА рЃерЃћрЃЏрЃЮрЃгрЃЏрЃћрЃЉрЃљ"
    echo "2. ­ЪЊі рЃДрЃЮрЃЋрЃћрЃџрЃЊрЃдрЃўрЃБрЃарЃў рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃў - рЃЊрЃћрЃбрЃљрЃџрЃБрЃарЃў рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃў"
    echo "3. ­ЪЊѕ рЃЋрЃћрЃарЃАрЃўрЃћрЃЉрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ - рЃЋрЃћрЃарЃАрЃўрЃћрЃЉрЃўрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљ рЃЊрЃљ рЃўрЃАрЃбрЃЮрЃарЃўрЃљ"
    echo "4. ­ЪњЙ рЃЉрЃћрЃЦрЃљрЃърЃўрЃА рЃерЃћрЃЦрЃЏрЃюрЃљ - рЃърЃарЃЮрЃћрЃЦрЃбрЃўрЃА рЃЉрЃћрЃЦрЃљрЃърЃў"
    echo "5. ­Ъџђ рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ - ASP.NET Core рЃАрЃћрЃарЃЋрЃўрЃАрЃўрЃА рЃЏрЃљрЃарЃЌрЃЋрЃљ"
    echo "6. ­ЪЊІ рЃџрЃЮрЃњрЃћрЃЉрЃўрЃА рЃюрЃљрЃ«рЃЋрЃљ - рЃАрЃ«рЃЋрЃљрЃЊрЃљрЃАрЃ«рЃЋрЃљ рЃџрЃЮрЃњрЃћрЃЉрЃўрЃА рЃюрЃљрЃ«рЃЋрЃљ"
    echo "7. ­ЪћД Build & Run - рЃърЃарЃЮрЃћрЃЦрЃбрЃўрЃА рЃљрЃгрЃДрЃЮрЃЉрЃљ рЃЊрЃљ рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ"
    echo "8. ­ЪЊі рЃЊрЃћрЃбрЃљрЃџрЃБрЃарЃў рЃАрЃбрЃљрЃбрЃБрЃАрЃў - рЃАрЃарЃБрЃџрЃў рЃўрЃюрЃцрЃЮрЃарЃЏрЃљрЃфрЃўрЃљ"
    echo ""
    echo -e "${CYAN}­ЪћД рЃЉрЃарЃФрЃљрЃюрЃћрЃЉрЃћрЃЉрЃў рЃбрЃћрЃарЃЏрЃўрЃюрЃљрЃџрЃерЃў:${NC}"
    echo "  ./automated_test.sh - рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃў рЃбрЃћрЃАрЃбрЃў"
    echo "  ./daily_monitoring.sh - рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃў"
    echo "  ./version_control.sh show - рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃЕрЃЋрЃћрЃюрЃћрЃЉрЃљ"
    echo "  ./version_control.sh patch \"рЃљрЃдрЃгрЃћрЃарЃљ\" - рЃЋрЃћрЃарЃАрЃўрЃўрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљ"
    echo ""
    echo -e "${CYAN}­ЪЊЂ рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЋрЃљрЃюрЃў рЃцрЃљрЃўрЃџрЃћрЃЉрЃў:${NC}"
    echo "  PROJECT_TESTING_FRAMEWORK.md - рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃўрЃА рЃЕрЃљрЃарЃЕрЃЮ"
    echo "  logs/test/ - рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃўрЃА рЃџрЃЮрЃњрЃћрЃЉрЃў"
    echo "  logs/monitoring/ - рЃЏрЃЮрЃюрЃўрЃбрЃЮрЃарЃўрЃюрЃњрЃўрЃА рЃџрЃЮрЃњрЃћрЃЉрЃў"
    echo "  /home/gadmin/backup/ - рЃЉрЃћрЃЦрЃљрЃърЃћрЃЉрЃў"
    echo ""
    
    read -p "Enter-рЃўрЃА рЃЊрЃљрЃАрЃљрЃгрЃДрЃўрЃАрЃљрЃЊ..." -r
}

# рЃЏрЃЌрЃљрЃЋрЃљрЃарЃў рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ
main() {
    while true; do
        clear
        show_logo
        show_quick_status
        show_menu
        
        read -p "рЃљрЃўрЃарЃЕрЃўрЃћрЃЌ рЃЮрЃцрЃфрЃўрЃљ (0-9): " choice
        
        case $choice in
            1)
                run_automated_test
                ;;
            2)
                run_daily_monitoring
                ;;
            3)
                manage_versions
                ;;
            4)
                create_backup
                ;;
            5)
                manage_service
                ;;
            6)
                view_logs
                ;;
            7)
                build_and_run
                ;;
            8)
                detailed_status
                ;;
            9)
                show_help
                ;;
            0)
                echo -e "${GREEN}­ЪЉІ рЃюрЃљрЃ«рЃЋрЃљрЃЏрЃЊрЃўрЃА!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}РЮї рЃљрЃарЃљрЃАрЃгрЃЮрЃарЃў рЃљрЃарЃЕрЃћрЃЋрЃљрЃюрЃў. рЃАрЃфрЃљрЃЊрЃћрЃЌ рЃЌрЃљрЃЋрЃўрЃЊрЃљрЃю.${NC}"
                sleep 2
                ;;
        esac
    done
}

# рЃърЃарЃЮрЃњрЃарЃљрЃЏрЃўрЃА рЃњрЃљрЃерЃЋрЃћрЃЉрЃљ
main
